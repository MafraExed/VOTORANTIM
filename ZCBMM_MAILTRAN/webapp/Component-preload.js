/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/Component-preload",
	"modules": {
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/Component.js": "/* global document */\r\nsap.ui.define([\r\n\t\t\"sap/ui/core/UIComponent\",\r\n\t\t\"sap/ui/Device\",\r\n\t\t\"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/model/models\",\r\n\t\t\"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/ListSelector\",\r\n\t\t\"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/ErrorHandler\"\r\n\t], function (UIComponent, Device, models, ListSelector, ErrorHandler) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn UIComponent.extend(\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.Component\", {\r\n\r\n\t\t\tmetadata : {\r\n\t\t\t\tmanifest : \"json\"\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t\t * In this method, the FLP and device models are set and the router is initialized.\r\n\t\t\t * @public\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tinit : function () {\r\n\t\t\t\tthis.oListSelector = new ListSelector();\r\n\t\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t\t// set the device model\r\n\t\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t\t// set the FLP model\r\n\t\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t\t// call the base component's init function and create the App view\r\n\t\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t\t// create the views based on the url/hash\r\n\t\t\t\tthis.getRouter().initialize();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * The component is destroyed by UI5 automatically.\r\n\t\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\r\n\t\t\t * @public\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tdestroy : function () {\r\n\t\t\t\tthis.oListSelector.destroy();\r\n\t\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t\t// call the base component's destroy function\r\n\t\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t\t * @public\r\n\t\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t\t */\r\n\t\t\tgetContentDensityClass : function() {\r\n\t\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this._sContentDensityClass;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/BaseController.js": "/*global history */\r\nsap.ui.define([\r\n\t\t\"sap/ui/core/mvc/Controller\",\r\n\t\t\"sap/ui/core/routing/History\"\r\n\t], function (Controller, History) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn Controller.extend(\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.BaseController\", {\r\n\t\t\t/**\r\n\t\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t\t * @public\r\n\t\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t\t */\r\n\t\t\tgetRouter : function () {\r\n\t\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t\t * @public\r\n\t\t\t * @param {string} sName the model name\r\n\t\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t\t */\r\n\t\t\tgetModel : function (sName) {\r\n\t\t\t\treturn this.getView().getModel(sName);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t\t * @public\r\n\t\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t\t * @param {string} sName the model name\r\n\t\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t\t */\r\n\t\t\tsetModel : function (oModel, sName) {\r\n\t\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for getting the resource bundle.\r\n\t\t\t * @public\r\n\t\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t\t */\r\n\t\t\tgetResourceBundle : function () {\r\n\t\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for navigating back.\r\n\t\t\t * It there is a history entry or an previous app-to-app navigation we go one step back in the browser history\r\n\t\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonNavBack : function() {\r\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash(),\r\n\t\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\t\t\tif (sPreviousHash !== undefined || !oCrossAppNavigator.isInitialNavigation()) {\r\n\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.getRouter().navTo(\"master\", {}, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/Detail.controller.js": "/*global location */\nsap.ui.define([\n\t\"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/model/formatter\",\n\t\"sap/m/MessageToast\",\n\t\"sap/ui/core/mvc/Controller\",\n\t'sap/m/Label',\n\t'sap/m/Button',\n\t'sap/m/Dialog',\n\t'sap/m/Text',\n\t'sap/m/TextArea'\n\t\n\t\n], function(BaseController, JSONModel, formatter, MessageToast, Controller, Label, Button, Dialog, Text, TextArea) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.Detail\", {\n\n\t\tformatter: formatter,\n\n\t\t/* =========================================================== */\n\t\t/* lifecycle methods                                           */\n\t\t/* =========================================================== */\n\n\t\tonInit: function() {\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t// between the busy indication for loading the view's meta data\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\n\t\t\tthis.setModel(oViewModel, \"detailView\");\n\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* event handlers                                              */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareEmailPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\tnull,\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Event handler when the share in JAM button has been clicked\n\t\t * @public\n\t\t */\n\t\tonShareInJamPress: function() {\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\n\t\t\t\t\tsettings: {\n\t\t\t\t\t\tobject: {\n\t\t\t\t\t\t\tid: location.href,\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\toShareDialog.open();\n\t\t},\n\n\t\t/* =========================================================== */\n\t\t/* begin: internal methods                                     */\n\t\t/* =========================================================== */\n\n\t\t/**\n\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t * @function\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t * @private\n\t\t */\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\tvar Bukrs = oEvent.getParameter(\"arguments\").Bukrs;\n\t\t\tvar IdSolicitacao = oEvent.getParameter(\"arguments\").IdSolicitacao;\n\t\t\tvar WerksO = oEvent.getParameter(\"arguments\").WerksO;\n\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"ZET_CBMM_CF_FRETESet\", {\n\t\t\t\t\tBukrs: Bukrs,\n\t\t\t\t\tIdSolicitacao: IdSolicitacao,\n\t\t\t\t\tWerksO: WerksO\n\n\t\t\t\t});\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t/**\n\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t * @function\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t * @private\n\t\t */\n\t\t_bindView: function(sObjectPath) {\n\t\t\t// Set busy indicator during view binding\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\toViewModel.setProperty(\"/busy\", false);\n\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_onBindingChange: function() {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toElementBinding = oView.getElementBinding();\n\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t// does not make sense anymore.\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sPath = oElementBinding.getPath(),\n\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\tsObjectId = oObject.IdSolicitacao,\n\t\t\t\tsObjectName = oObject.IdSolicitacao,\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\n\t\t\tvar smartTable = this.getView().byId(\"smartTable\");\n\t\t\tsmartTable.rebindTable(\"e\");\n\t\t},\n\n\t\tatualizaTabela: function(oEvent) {\n\t\t\tvar IdSolicitacao = this.getView().byId(\"IdIdSolicitacao\").getValue();\n\n\t\t\tif (IdSolicitacao) {\n\t\t\t\toEvent.getParameter(\"bindingParams\").filters.push(new sap.ui.model.Filter({\n\t\t\t\t\tpath: \"IdSolicitacao\",\n\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\tvalue1: IdSolicitacao\n\t\t\t\t}));\n\t\t\t}\n\t\t\toEvent.getParameter(\"bindingParams\").filters.push(new sap.ui.model.Filter({\n\t\t\t\tpath: \"Vencedor\",\n\t\t\t\toperator: \"EQ\",\n\t\t\t\tvalue1: \"X\"\n\t\t\t}));\n\t\t},\n\n\t\thandleUploadPress: function(oEvent) {\n\t\t\tvar oFileUploader = this.byId(\"fileUploader\");\n\t\t\toFileUploader.upload();\n\t\t},\n\n\t\tonPress: function(oEvent) {\n\t\t\t// The source is the list item that got pressed\n\t\t\tthis._showObject(oEvent.getSource());\n\t\t},\n\n\t\t_showObject: function(oItem) {\n\t\t\tvar IdSolicitacao = oItem.getBindingContext().getProperty(\"IdSolicitacao\");\n\t\t\tvar Bukrs = '2001';\n\t\t\tvar IdRota = oItem.getBindingContext().getProperty(\"IdRota\");\n\t\t\tvar WerksO = oItem.getBindingContext().getProperty(\"WerksO\");\n\t\t\tvar Carteira = oItem.getBindingContext().getProperty(\"Carteira\");\n\t\t\t//var Carteira = this.getView().byId(\"IdCarteira\").getValue();\n\t\t\tvar NrTransp = oItem.getBindingContext().getProperty(\"NrTransp\");\n\n\t\t\tthis.getRouter().navTo(\"Veiculo\", {\n\t\t\t\tIdSolicitacao: IdSolicitacao,\n\t\t\t\tBukrs: Bukrs,\n\t\t\t\tIdRota: IdRota,\n\t\t\t\tWerksO: WerksO,\n\t\t\t\tCarteira: Carteira,\n\t\t\t\tNrTransp: NrTransp\n\t\t\t});\n\t\t},\n\n\t\t_onMetadataLoaded: function() {\n\t\t\t// Store original busy indicator delay for the detail view\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\n\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t// detail view is displayed for the first time\n\t\t\toViewModel.setProperty(\"/delay\", 0);\n\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t},\n\n\t\tonEmail: function() {\n\t\t\tvar oModel = this.getView().getModel();\n\t\t\tvar oListBase = this.getView().byId(\"smartTable\").getTable();\n\t\t\tvar items = oListBase._aSelectedPaths;\n\t\t\tvar length = items.length;\n\t\t\tvar This = this;\n\t\t\tvar IdSolicitacao = this.getView().byId(\"IdIdSolicitacao\").getValue();\n\t\t\tvar mensagemTransp = \"Deseja enviar e-mail a(s) transportadora(s) vencedora(s) ?\";\n\t\t\tvar Erro = 0;\n\t\t\tvar StatusFin = \"FINA\";\n\t\t\tvar Bukrs = \"2001\";\n\t\t\tvar WerksO = this.getView().byId(\"IdWerks\").getValue();\n\t\t\tvar _oComponent = this.getOwnerComponent();\n\t\t\tvar oList = _oComponent.oListSelector._oList;\n\t\t\tvar oListBinding = oList.getBinding(\"items\");\n\n\t\t\tif (length === 0) {\n\t\t\t\tsap.m.MessageBox.error(\"Selecione as transportadoras que deseja enviar o e-mail!\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar smartTable = this.getView().byId(\"smartTable\");\n\n\t\t\tvar dialog = \"\";\n\t\t\tdialog = new Dialog({\n\t\t\t\ttitle: \"Observações\",\n\t\t\t\ttype: \"Message\",\n\t\t\t\tcontent: [\n\t\t\t\t\tnew Label({\n\t\t\t\t\t\ttext: 'Informações adicionais a transportadora:',\n\t\t\t\t\t\tlabelFor: 'submitDialogTextarea'\n\t\t\t\t\t}),\n\t\t\t\t\tnew TextArea('submitDialogTextarea', {\n\t\t\t\t\t\tliveChange: function(oEvent) {\n\t\t\t\t\t\t\tvar sText = oEvent.getParameter('value');\n\t\t\t\t\t\t\tvar parent = oEvent.getSource().getParent();\n\n\t\t\t\t\t\t\tparent.getBeginButton().setEnabled(sText.length > 0);\n\t\t\t\t\t\t},\n\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\tplaceholder: 'Digite aqui.'\n\t\t\t\t\t})\n\t\t\t\t],\n\t\t\t\tbeginButton: new Button({\n\t\t\t\t\ttext: 'Enviar',\n\t\t\t\t\tenabled: false,\n\t\t\t\t\tpress: function() {\n\t\t\t\t\t\tvar sText = sap.ui.getCore().byId('submitDialogTextarea').getValue();\n\n\t\t\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\t\t\t//\t\tvar sLinha = items[i];\n\t\t\t\t\t\t\tvar oKey = oListBase._aSelectedPaths[i];\n\t\t\t\t\t\t\tvar oEntry = {};\n\t\t\t\t\t\t\toEntry.Vencedor = \"E\";\n\t\t\t\t\t\t\toModel.update(oKey, oEntry, {\n\t\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\t\t\t\t\t\t\t\t\tErro = 0;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terror: function(oError) {\n\t\t\t\t\t\t\t\t\tErro = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdialog.close();\n\n\t\t\t\t\t\tif (Erro === 0) {\n\t\t\t\t\t\t\tvar Key = \"/ZET_CBMM_CF_FRETESet(Bukrs='\" + Bukrs + \"',WerksO='\" + WerksO + \"',IdSolicitacao=\" + IdSolicitacao + \")\";\n\t\t\t\t\t\t\tvar oModel10 = new sap.ui.model.json.JSONModel();\n\t\t\t\t\t\t\tvar Key2 = \"/sap/opu/odata/sap/ZGWCBMM_CONTRATACAO_FRETE_SRV\" + Key;\n\t\t\t\t\t\t\toModel10.loadData(Key2, null, false, \"GET\", false, false, null);\n\t\t\t\t\t\t\tvar idSolicitacao = oModel10.oData.d.IdSolicitacao;\n\t\t\t\t\t\t\tvar emailsol = oModel10.oData.d.Emailsol;\n\t\t\t\t\t\t\tvar keymail = \"/ZET_CBMM_CF_EMAILSet(Titulo='Contrato%20CBA.')\";\n\t\t\t\t\t\t\tvar oEntrymail = {};\n\t\t\t\t\t\t\toEntrymail.Destinatario = emailsol;\n\t\t\t\t\t\t\toEntrymail.Corpo = sText;\n\t\t\t\t\t\t\toModel.update(keymail, oEntrymail, {\n\t\t\t\t\t\t\t\tsuccess: function(oData, oResponse) {\n\t\t\t\t\t\t\t\t\tErro = 0;\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\terror: function(oError) {\n\t\t\t\t\t\t\t\t\tErro = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (Erro === 0) {\n\t\t\t\t\t\t\t\tsap.m.MessageBox.success(\"E-mail enviado a transportadora!\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (Erro === 1) {\n\t\t\t\t\t\t\t\tsap.m.MessageBox.error(\"Erro ao chamar o serviço.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Erro === 1) {\n\t\t\t\t\t\t\tsap.m.MessageBox.error(\"Erro ao chamar o serviço.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsmartTable.rebindTable(\"e\");\n\n\t\t\t\t\t\toListBinding.refresh(true);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tendButton: new Button({\n\t\t\t\t\ttext: \"Cancelar\",\n\t\t\t\t\tpress: function() {\n\t\t\t\t\t\tdialog.close();\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t\tafterClose: function() {\n\t\t\t\t\tdialog.destroy();\n\t\t\t\t}\n\t\t\t});\n\t\t\tdialog.open();\n\t\t}\n\n\t});\n\n});",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/ListSelector.js": "sap.ui.define([\r\n\t\t\"sap/ui/base/Object\",\r\n\t\t\"sap/m/GroupHeaderListItem\"\r\n\t], function (BaseObject, GroupHeaderListItem) {\r\n\t\t\"use strict\";\r\n\t\treturn BaseObject.extend(\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.ListSelector\", {\r\n\r\n\t\t\t/**\r\n\t\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\r\n\t\t\t * function.\r\n\t\t\t * @class\r\n\t\t\t * @public\r\n\t\t\t * @alias ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.ListSelector\r\n\t\t\t */\r\n\r\n\t\t\tconstructor : function () {\r\n\t\t\t\tthis._oWhenListHasBeenSet = new Promise(function (fnResolveListHasBeenSet) {\r\n\t\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\t// This promise needs to be created in the constructor, since it is allowed to\r\n\t\t\t\t// invoke selectItem functions before calling setBoundMasterList\r\n\t\t\t\tthis.oWhenListLoadingIsDone = new Promise(function (fnResolve, fnReject) {\r\n\t\t\t\t\t// Used to wait until the setBound masterList function is invoked\r\n\t\t\t\t\tthis._oWhenListHasBeenSet\r\n\t\t\t\t\t\t.then(function (oList) {\r\n\t\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\r\n\t\t\t\t\t\t\t\tfunction (oData) {\r\n\t\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\r\n\t\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\r\n\t\t\t\t\t\t\t\t\t\t\terror : true\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar oFirstListItem = this.getFirstListItem();\r\n\t\t\t\t\t\t\t\t\tif (oFirstListItem) {\r\n\t\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\r\n\t\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\r\n\t\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\r\n\t\t\t\t\t\t\t\t\t\tfnResolve({\r\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\r\n\t\t\t\t\t\t\t\t\t\t\tfirstListitem : oFirstListItem\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t// No items in the list\r\n\t\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\r\n\t\t\t\t\t\t\t\t\t\t\terror : false\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}.bind(this)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t}.bind(this));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\r\n\t\t\t * May only be invoked once per ListSelector instance.\r\n\t\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tsetBoundMasterList : function (oList) {\r\n\t\t\t\tthis._oList = oList;\r\n\t\t\t\tthis._fnResolveListHasBeenSet(oList);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Finds the first list item\r\n\t\t\t * @return {sap.m.ListItem|null} The first item that is not a group header\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tgetFirstListItem : function () {\r\n\t\t\t\tvar aItems = this._oList.getItems();\r\n\r\n\t\t\t\tfor (var i = 0; i < aItems.length; i++) {\r\n\t\t\t\t\tif (!(aItems[i] instanceof GroupHeaderListItem)) {\r\n\t\t\t\t\t\treturn aItems[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn null;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\r\n\t\t\t * no selection/scrolling will happen\r\n\t\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tselectAListItem : function (sBindingPath) {\r\n\r\n\t\t\t\tthis.oWhenListLoadingIsDone.then(\r\n\t\t\t\t\tfunction () {\r\n\t\t\t\t\t\tvar oList = this._oList,\r\n\t\t\t\t\t\t\toSelectedItem;\r\n\r\n\t\t\t\t\t\tif (oList.getMode() === \"None\") {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\toSelectedItem = oList.getSelectedItem();\r\n\r\n\t\t\t\t\t\t// skip update if the current selection is already matching the object path\r\n\t\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\toList.getItems().some(function (oItem) {\r\n\t\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\t\toList.setSelectedItem(oItem);\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tfunction () {\r\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath + \" because the list encountered an error or had no items\");\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* Convenience Functions for List Selection Change Event       */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\r\n\t\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\r\n\t\t\t * is called.\r\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t\t * @param {function} oListener the listener object\r\n\t\t\t * @return {ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.model.ListSelector} the list selector object for method chaining\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tattachListSelectionChange : function (fnFunction, oListener) {\r\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\r\n\t\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\r\n\t\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\r\n\t\t\t * is called.\r\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\r\n\t\t\t * @param {function} oListener the listener object\r\n\t\t\t * @return {ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.model.ListSelector} the list selector object for method chaining\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tdetachListSelectionChange : function (fnFunction, oListener) {\r\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\r\n\t\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Removes all selections from master list.\r\n\t\t\t * Does not trigger 'selectionChange' event on master list, though.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tclearMasterListSelection : function () {\r\n\t\t\t\t//use promise to make sure that 'this._oList' is available\r\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\r\n\t\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/Master.controller.js": "/*global history */\r\nsap.ui.define([\r\n\t\"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"sap/ui/core/routing/History\",\r\n\t\"sap/ui/model/Filter\",\r\n\t\"sap/ui/model/FilterOperator\",\r\n\t\"sap/m/GroupHeaderListItem\",\r\n\t\"sap/ui/Device\",\r\n\t\"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/model/formatter\"\r\n], function(BaseController, JSONModel, History, Filter, FilterOperator, GroupHeaderListItem, Device, formatter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.Master\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonInit: function() {\r\n\t\t\t// Control state model\r\n\t\t\tvar oList = this.byId(\"list\"),\r\n\t\t\t\toViewModel = this._createViewModel(),\r\n\t\t\t\t// Put down master list's original value for busy indicator delay,\r\n\t\t\t\t// so it can be restored later on. Busy handling on the master list is\r\n\t\t\t\t// taken care of by the master list itself.\r\n\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\r\n\r\n\t\t\tthis._oList = oList;\r\n\t\t\t// keeps the filter and search state\r\n\t\t\tthis._oListFilterState = {\r\n\t\t\t\taFilter: [],\r\n\t\t\t\taSearch: []\r\n\t\t\t};\r\n\t\t\t/*\t     \tvar sInitParm = 'IdSolicitacao';\r\n\t\t\t\t\t\tvar oFilter = new sap.ui.model.Filter(\"IdSolicitacao\", sap.ui.model.FilterOperator.EQ, sInitParm);\r\n\t\t\t\t\t\tthis._oListFilterState.aFilter = [new Filter(\"IdSolicitacao\", FilterOperator.Eq, sInitParm)];*/\r\n\r\n\t\t\tthis.setModel(oViewModel, \"masterView\");\r\n\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t// break after the busy indication for loading the view's meta data is\r\n\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\toList.attachEventOnce(\"updateFinished\", function() {\r\n\t\t\t\t// Restore original busy indicator delay for the list\r\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t});\r\n\r\n\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\tonBeforeFirstShow: function() {\r\n\t\t\t\t\t// oList.getBinding(\"items\").filter([oFilter]);\r\n\t\t\t\t\tthis.getOwnerComponent().oListSelector.setBoundMasterList(oList);\r\n\t\t\t\t}.bind(this)\r\n\t\t\t});\r\n\r\n\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\r\n\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * After list data is available, this handler method updates the\r\n\t\t * master list counter and hides the pull to refresh control, if\r\n\t\t * necessary.\r\n\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonUpdateFinished: function(oEvent) {\r\n\t\t\t// update the master list object counter after new data is loaded\r\n\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\r\n\t\t\t// hide pull to refresh if necessary\r\n\t\t\tthis.byId(\"pullToRefresh\").hide();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the master search field. Applies current\r\n\t\t * filter value and triggers a new search. If the search field's\r\n\t\t * 'refresh' button has been pressed, no new search is triggered\r\n\t\t * and the list binding is refresh instead.\r\n\t\t * @param {sap.ui.base.Event} oEvent the search event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSearch: function(oEvent) {\r\n\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t// refresh the list binding.\r\n\t\t\t\tthis.onRefresh();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\t\t\tvar filtro1 = new Filter(\"IdSolicitacao\", FilterOperator.EQ, sQuery);\r\n\t\t\tsQuery = parseInt(sQuery);\r\n\t\t\tif (sQuery) {\r\n\t\t\t\tthis._oListFilterState.aSearch = [filtro1];\r\n\t\t\t} else {\r\n\t\t\t\tthis._oListFilterState.aSearch = [];\r\n\t\t\t}\r\n\t\t\tthis._applyFilterSearch();\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t * and group settings and refreshes the list binding.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonRefresh: function() {\r\n\t\t\tthis._oList.getBinding(\"items\").refresh();\r\n\t\t\t\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the list selection event\r\n\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSelectionChange: function(oEvent) {\r\n\t\t\t// get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).\r\n\t\t\tthis._showDetail(oEvent.getParameter(\"listItem\") || oEvent.getSource());\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\r\n\t\t * If there was an object selected in the master list, that selection is removed.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonBypassed: function() {\r\n\t\t\tthis._oList.removeSelections(true);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Used to create GroupHeaders with non-capitalized caption.\r\n\t\t * These headers are inserted into the master list to\r\n\t\t * group the master list's items.\r\n\t\t * @param {Object} oGroup group whose text is to be displayed\r\n\t\t * @public\r\n\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\r\n\t\t */\r\n\t\tcreateGroupHeader: function(oGroup) {\r\n\t\t\treturn new GroupHeaderListItem({\r\n\t\t\t\ttitle: oGroup.text,\r\n\t\t\t\tupperCase: false\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for navigating back.\r\n\t\t * It there is a history entry or an previous app-to-app navigation we go one step back in the browser history\r\n\t\t * If not, it will navigate to the shell home\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function() {\r\n\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash(),\r\n\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\tif (sPreviousHash !== undefined || !oCrossAppNavigator.isInitialNavigation()) {\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t} else {\r\n\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\ttarget: {\r\n\t\t\t\t\t\tshellHash: \"#Shell-home\"\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t_createViewModel: function() {\r\n\t\t\treturn new JSONModel({\r\n\t\t\t\tisFilterBarVisible: false,\r\n\t\t\t\tfilterBarLabel: \"\",\r\n\t\t\t\tdelay: 0,\r\n\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\r\n\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\r\n\t\t\t\tsortBy: \"IdSolicitacao\",\r\n\t\t\t\tgroupBy: \"None\"\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * If the master route was hit (empty hash) we have to set\r\n\t\t * the hash to to the first item in the list as soon as the\r\n\t\t * listLoading is done and the first item in the list is known\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onMasterMatched: function() {\r\n\t\t\tthis.getOwnerComponent().oListSelector.oWhenListLoadingIsDone.then(\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar IdSolicitacao = mParams.firstListitem.getBindingContext().getProperty(\"IdSolicitacao\");\r\n\t\t\t\t\tvar Bukrs = mParams.firstListitem.getBindingContext().getProperty(\"Bukrs\");\r\n\t\t\t\t\tvar WerksO = mParams.firstListitem.getBindingContext().getProperty(\"WerksO\");\r\n\t\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\t\tBukrs: Bukrs,\r\n\t\t\t\t\t\tIdSolicitacao: IdSolicitacao,\r\n\t\t\t\t\t\tWerksO: WerksO\r\n\t\t\t\t\t}, true);\r\n\t\t\t\t}.bind(this),\r\n\t\t\t\tfunction(mParams) {\r\n\t\t\t\t\tif (mParams.error) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\r\n\t\t\t\t}.bind(this)\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Shows the selected item on the detail page\r\n\t\t * On phones a additional history entry is created\r\n\t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n\t\t * @private\r\n\t\t */\r\n\t\t_showDetail: function(oItem) {\r\n\t\t\tvar bReplace = !Device.system.phone;\r\n\t\t\tvar Bukrs = oItem.getBindingContext().getProperty(\"Bukrs\");\r\n\t\t\tvar IdSolicitacao = oItem.getBindingContext().getProperty(\"IdSolicitacao\");\r\n\t\t\tvar WerksO = oItem.getBindingContext().getProperty(\"WerksO\");\r\n\r\n\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\tBukrs: Bukrs,\r\n\t\t\t\tIdSolicitacao: IdSolicitacao,\r\n\t\t\t\tWerksO: WerksO\r\n\r\n\t\t\t}, bReplace);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sets the item count on the master list header\r\n\t\t * @param {integer} iTotalItems the total number of items in the list\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateListItemCount: function(iTotalItems) {\r\n\t\t\tvar sTitle;\r\n\t\t\t// only update the counter if the length is final\r\n\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\r\n\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyFilterSearch: function() {\r\n\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\r\n\t\t\t\toViewModel = this.getModel(\"masterView\");\r\n\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\r\n\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\tif (aFilters.length !== 0) {\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\r\n\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\r\n\t\t\t\t// only reset the no data text to default when no new search was triggered\r\n\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method to apply both group and sort state together on the list binding\r\n\t\t * @param {sap.ui.model.Sorter[]} aSorters an array of sorters\r\n\t\t * @private\r\n\t\t */\r\n\t\t_applyGroupSort: function(aSorters) {\r\n\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\r\n\t\t * @param {string} sFilterBarText the selected filter value\r\n\t\t * @private\r\n\t\t */\r\n\t\t_updateFilterBar: function(sFilterBarText) {\r\n\t\t\tvar oViewModel = this.getModel(\"masterView\");\r\n\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\r\n\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/App.controller.js": "sap.ui.define([\r\n\t\t\"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/BaseController\",\r\n\t\t\"sap/ui/model/json/JSONModel\"\r\n\t], function (BaseController, JSONModel) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.extend(\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.App\", {\r\n\r\n\t\t\tonInit : function () {\r\n\t\t\t\tvar oViewModel,\r\n\t\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\r\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\t\toViewModel = new JSONModel({\r\n\t\t\t\t\tbusy : true,\r\n\t\t\t\t\tdelay : 0\r\n\t\t\t\t});\r\n\t\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// since then() has no \"reject\"-path attach to the MetadataFailed-Event to disable the busy indicator in case of an error\r\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().\r\n\t\t\t\t\t\tthen(fnSetAppNotBusy);\r\n\t\t\t\tthis.getOwnerComponent().getModel().attachMetadataFailed(fnSetAppNotBusy);\r\n\r\n\r\n\t\t\t\t// Makes sure that master view is hidden in split app\r\n\t\t\t\t// after a new list entry has been selected.\r\n\t\t\t\toListSelector.attachListSelectionChange(function () {\r\n\t\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\t// apply content density mode to root view\r\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\t\"sap/ui/base/Object\",\r\n\t\t\"sap/m/MessageBox\"\r\n\t], function (UI5Object, MessageBox) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn UI5Object.extend(\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.ErrorHandler\", {\r\n\r\n\t\t\t/**\r\n\t\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t\t * @class\r\n\t\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t\t * @public\r\n\t\t\t * @alias ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.ErrorHandler\r\n\t\t\t */\r\n\t\t\tconstructor : function (oComponent) {\r\n\t\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\t\tthis._oComponent = oComponent;\r\n\t\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\t\tthis._oModel.attachMetadataFailed(function (oEvent) {\r\n\t\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tthis._oModel.attachRequestFailed(function (oEvent) {\r\n\t\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\r\n\t\t\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t\t * Only the first error message will be display.\r\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_showServiceError : function (sDetails) {\r\n\t\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._bMessageOpen = true;\r\n\t\t\t\tMessageBox.error(\r\n\t\t\t\t\tthis._sErrorText,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\r\n\t\t\t\t\t\tdetails : sDetails,\r\n\t\t\t\t\t\tstyleClass : this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\t\tactions : [MessageBox.Action.CLOSE],\r\n\t\t\t\t\t\tonClose : function () {\r\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t\t}.bind(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/Veiculo.controller.js": "sap.ui.define([\n\t\"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/controller/BaseController\",\n\t\"sap/ui/model/json/JSONModel\",\n\t\"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/model/formatter\"\n], function(BaseController, JSONModel, formatter) {\n\t\"use strict\";\n\n\treturn BaseController.extend(\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.Veiculo\", {\n\n\t\tformatter: formatter,\n\n\t\tonInit: function() {\n\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\tbusy: false,\n\t\t\t\tdelay: 0\n\t\t\t});\n\t\t\tthis.getRouter().getRoute(\"Veiculo\").attachPatternMatched(this._onObjectMatched, this);\n\t\t\tthis.setModel(oViewModel, \"VeiculoView\");\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t},\n\t\t_onObjectMatched: function(oEvent) {\n\t\t\tvar Bukrs = oEvent.getParameter(\"arguments\").Bukrs;\n\t\t\tvar WerksO = oEvent.getParameter(\"arguments\").WerksO;\n\t\t\tvar IdSolicitacao = oEvent.getParameter(\"arguments\").IdSolicitacao;\n\t\t\tvar IdRota = oEvent.getParameter(\"arguments\").IdRota;\n\t\t\tvar NrTransp = oEvent.getParameter(\"arguments\").NrTransp;\n\n\t\t\tthis.getModel().metadataLoaded().then(function() {\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"ZET_CBMM_CF_TRANSPSet\", {\n\t\t\t\t\tBukrs: Bukrs,\n\t\t\t\t\tWerksO: WerksO,\n\t\t\t\t\tIdSolicitacao: IdSolicitacao,\n\t\t\t\t\tIdRota: IdRota,\n\t\t\t\t\tNrTransp: NrTransp\n\t\t\t\t});\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t}.bind(this));\n\t\t},\n\n\t\t_bindView: function(sObjectPath) {\n\t\t\t// Set busy indicator during view binding\n\t\t\tvar oViewModel = this.getModel(\"VeiculoView\"),\n\t\t\t\toDataModel = this.getModel();\n\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\n\t\t\tthis.getView().bindElement({\n\t\t\t\tpath: sObjectPath,\n\t\t\t\tevents: {\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\n\t\t\t\t\tdataRequested: function() {\n\t\t\t\t\t\toDataModel.metadataLoaded().then(function() {\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tdataReceived: function() {\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t_onBindingChange: function() {\n\t\t\tvar oView = this.getView(),\n\t\t\t\toElementBinding = oView.getElementBinding();\n\n\t\t\t// No data for the binding\n\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t// does not make sense anymore.\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar sPath = oElementBinding.getPath(),\n\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\tsObjectId = oObject.IdSolicitacao,\n\t\t\t\tsObjectName = oObject.IdSolicitacao,\n\t\t\t\toViewModel = this.getModel(\"VeiculoView\");\n\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\n\t\t\tvar smartTable = this.getView().byId(\"smartTable2\");\n\t\t\tsmartTable.rebindTable(\"e\");\n\n\t\t},\n\t\tatualizaTabela2: function(oEvent) {\n\t\t\tvar IdSolicitacao = this.getView().byId(\"IdSolicitacao\").getValue();\n\n\t\t\tif (IdSolicitacao) {\n\t\t\t\toEvent.getParameter(\"bindingParams\").filters.push(new sap.ui.model.Filter({\n\t\t\t\t\tpath: \"IdSolicitacao\",\n\t\t\t\t\toperator: \"EQ\",\n\t\t\t\t\tvalue1: IdSolicitacao\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\t\tonBack: function() {\n\t\t\tthis.getRouter().navTo(\"BackTo\");\n\t\t},\n\t\t_onMetadataLoaded: function() {\n\t\t\t// Store original busy indicator delay for the detail view\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\n\t\t\t\toViewModel = this.getModel(\"VeiculoView\");\n\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t// detail view is displayed for the first time\n\t\t\toViewModel.setProperty(\"/delay\", 0);\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t},\n\t\tonPress: function(oEvent) {\n\t\t\t// The source is the list item that got pressed\n\t\t\tthis._showObject(oEvent.getSource());\n\t\t},\n\t\t_showObject: function(oItem) {\n\t\t\tvar IdSolicitacao = oItem.getBindingContext().getProperty(\"IdSolicitacao\");\n\t\t\tvar WerksO = oItem.getBindingContext().getProperty(\"WerksO\");\n\t\t\tvar Bukrs = oItem.getBindingContext().getProperty(\"Bukrs\");\n\t\t\tvar IdRota = oItem.getBindingContext().getProperty(\"IdRota\");\n\t\t\tvar NrTransp = oItem.getBindingContext().getProperty(\"NrTransp\");\n\t\t\tvar TpVeiculo = oItem.getBindingContext().getProperty(\"TpVeiculo\");\n\n\t\t\tthis.getRouter().navTo(\"Mapa\", {\n\t\t\t\tBukrs: Bukrs,\n\t\t\t\tWerksO: WerksO,\n\t\t\t\tIdSolicitacao: IdSolicitacao,\n\t\t\t\tIdRota: IdRota,\n\t\t\t\tNrTransp: NrTransp,\n\t\t\t\tTpVeiculo: TpVeiculo\n\n\t\t\t});\n\t\t}\n\n\t});\n\n});",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/view/App.view.xml": "<mvc:View\r\n\tcontrollerName=\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.App\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\tdisplayBlock=\"true\"\r\n\tbusy=\"{appView>/busy}\"\r\n\tbusyIndicatorDelay=\"{appView>/delay}\"\r\n\txmlns=\"sap.m\">\r\n\t<SplitApp id=\"idAppControl\" />\r\n</mvc:View>",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/view/DetailNoObjectsAvailable.view.xml": "<mvc:View\r\n\tcontrollerName=\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.BaseController\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<MessagePage\r\n\t\tid=\"page\"\r\n\t\ttitle=\"{i18n>notAvailableViewTitle}\"\r\n\t\ttext=\"{i18n>noObjectsAvailableText}\"\r\n\t\ticon=\"{sap-icon://product}\"\r\n\t\tdescription=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\"\r\n\t\tnavButtonPress=\"onNavBack\">\r\n\t</MessagePage>\r\n\r\n</mvc:View>",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/view/DetailObjectNotFound.view.xml": "<mvc:View\r\n\tcontrollerName=\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.BaseController\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<MessagePage\r\n\t\tid=\"page\"\r\n\t\ttitle=\"{i18n>detailTitle}\"\r\n\t\ttext=\"{i18n>noObjectFoundText}\"\r\n\t\ticon=\"{sap-icon://product}\"\r\n\t\tdescription=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\"\r\n\t\tnavButtonPress=\"onNavBack\">\r\n\t</MessagePage>\r\n\r\n</mvc:View>",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/view/Detail.view.xml": "<mvc:View controllerName=\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.Detail\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns=\"sap.m\"\n\txmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:smartFilterBar=\"sap.ui.comp.smartfilterbar\" xmlns:m=\"sap.m\"\n\txmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:sv=\"sap.ui.comp.smartvariants\" xmlns:smartTable=\"sap.ui.comp.smarttable\"\n\txmlns:table=\"sap.ui.table\" xmlns:f=\"sap.ui.layout.form\" xmlns:core=\"sap.ui.core\" xmlns:l=\"controls\"\n\txmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\" width=\"100%\" height=\"100%\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"Informações do Frete\"\n\t\tbusy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\t\t<semantic:content>\n\t\t\t<!--<HBox width=\"100%\" id=\"__hbox0\">-->\n\t\t\t<!--\t<Input value=\"{Bukrs}\" id=\"idBukrs\" visible=\"false\"/>-->\n\t\t\t<!--\t<Input value=\"{IdSolicitacao}\" id=\"idIdSolicitacao\" visible=\"false\"/>-->\n\t\t\t<!--\t<Input value=\"{IdRota}\" id=\"idIdRota\" visible=\"false\"/>-->\n\t\t\t<!--</HBox>-->\n\t\t\t<VBox>\n\t\t\t\t<ObjectHeader title=\"Observações do Frete\" intro=\"\" id=\"idheader0\" icon=\"sap-icon://shipping-status\" iconActive=\"false\" responsive=\"true\"/>\n\t\t\t</VBox>\n\t\t\t<f:Form class=\"editableForm\" editable=\"true\">\n\t\t\t\t<f:layout>\n\t\t\t\t\t<f:ResponsiveGridLayout labelSpanXL=\"6\" labelSpanL=\"6\" labelSpanM=\"6\" labelSpanS=\"12\" adjustLabelSpan=\"true\" emptySpanXL=\"0\" emptySpanL=\"0\"\n\t\t\t\t\t\temptySpanM=\"0\" emptySpanS=\"0\" columnsXL=\"3\" columnsL=\"3\" columnsM=\"3\" singleContainerFullSize=\"true\"/>\n\t\t\t\t</f:layout>\n\t\t\t\t<!--<f:formContainers>-->\n\t\t\t\t<!--\t<f:FormContainer>-->\n\t\t\t\t<!--\t\t<f:formElements></f:formElements>-->\n\t\t\t\t<!--\t</f:FormContainer>-->\n\t\t\t\t<!--\t<f:FormContainer>-->\n\t\t\t\t<!--\t\t<f:formElements></f:formElements>-->\n\t\t\t\t<!--\t</f:FormContainer>-->\n\t\t\t\t<!--</f:formContainers>-->\n\t\t\t</f:Form>\n\t\t\t<f:Form class=\"editableForm\" editable=\"true\">\n\t\t\t\t<f:layout>\n\t\t\t\t\t<f:ResponsiveGridLayout labelSpanXL=\"6\" labelSpanL=\"6\" labelSpanM=\"6\" labelSpanS=\"12\" adjustLabelSpan=\"true\" emptySpanXL=\"0\" emptySpanL=\"0\"\n\t\t\t\t\t\temptySpanM=\"0\" emptySpanS=\"0\" columnsXL=\"3\" columnsL=\"3\" columnsM=\"3\" singleContainerFullSize=\"true\"/>\n\t\t\t\t</f:layout>\n\t\t\t\t<f:formContainers>\n\t\t\t\t\t<f:FormContainer>\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{WerksO}\" id=\"IdWerks\" editable=\"false\" valueHelpRequest=\"onHelpWerks\" showValueHelp=\"true\" change=\"onChangeWerks\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Centro\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{IdSolicitacao}\" id=\"IdIdSolicitacao\" editable=\"false\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Id do Orçamento\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{Carteira}\" id=\"IdCarteira\" editable=\"false\" valueHelpRequest=\"onHelpCarteira\" showValueHelp=\"true\" change=\"onChangeCarteira\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Carteira\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t\t<f:FormContainer>\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{Prioridade}\" id=\"IdPrioridade\" editable=\"false\" valueHelpRequest=\"onHelpPrioridade\" showValueHelp=\"true\"\n\t\t\t\t\t\t\t\t\t\tchange=\"onChangePrioridade\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Prioridade\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{Modalidade}\" id=\"IdModalidade\" editable=\"false\" valueHelpRequest=\"onHelpModalidade\" showValueHelp=\"true\"\n\t\t\t\t\t\t\t\t\t\tchange=\"onChangeModalidade\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Modalidade\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{Finalidade}\" id=\"IdFinalidade\" editable=\"false\" valueHelpRequest=\"onHelpFinalidade\" showValueHelp=\"true\"\n\t\t\t\t\t\t\t\t\t\tchange=\"onChangeFinalidade\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Finalidade\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t\t<f:FormContainer>\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{GrpCompras}\" id=\"IdGrpCompras\" editable=\"false\" valueHelpRequest=\"onHelpGrupoDeCompras\" showValueHelp=\"true\"\n\t\t\t\t\t\t\t\t\t\tchange=\"onChangeGrpCompras\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Grp. de Compras\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{DtInic}\" id=\"IdDtInic\" editable=\"false\" type=\"Date\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Dt Incio Operação\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t</f:formContainers>\n\t\t\t</f:Form>\n\t\t\t<f:Form>\n\t\t\t\t<f:layout>\n\t\t\t\t\t<f:ResponsiveGridLayout labelSpanXL=\"5\" labelSpanL=\"5\" labelSpanM=\"5\" labelSpanS=\"12\" adjustLabelSpan=\"true\" emptySpanXL=\"0\" emptySpanL=\"0\"\n\t\t\t\t\t\temptySpanM=\"0\" emptySpanS=\"0\" columnsXL=\"1\" columnsL=\"1\" columnsM=\"1\" singleContainerFullSize=\"false\"/>\n\t\t\t\t</f:layout>\n\t\t\t\t<f:formContainers>\n\t\t\t\t\t<f:FormContainer>\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<smartTable:SmartTable id=\"smartTable\" entitySet=\"ZET_CBMM_CF_VEICULOSet\" smartFilterId=\"smartFilterBar\" useOnlyOneSolidToolbar=\"true\"\n\t\t\t\t\t\t\t\t\tuseExportToExcel=\"true\" useVariantManagement=\"true\" useTablePersonalisation=\"true\" tableType=\"Table\" header=\"Veículos\"\n\t\t\t\t\t\t\t\t\tshowRowCount=\"true\" showFullScreenButton=\"true\" initiallyVisibleFields=\"WerksO,IdSolicitacao,IdRota,NrTransp,TpVeiculo\"\n\t\t\t\t\t\t\t\t\tenableAutoBinding=\"true\" beforeRebindTable=\"atualizaTabela\" class=\"sapUiResponsiveContentPadding\" persistencyKey=\"SmartTablePKey\">\n\t\t\t\t\t\t\t\t\t<m:Table mode=\"MultiSelect\" id=\"table\" enableBusyIndicator=\"true\" busyIndicatorDelay=\"100\">\n\t\t\t\t\t\t\t\t\t\t<m:columns/>\n\t\t\t\t\t\t\t\t\t\t<m:items>\n\t\t\t\t\t\t\t\t\t\t\t<m:ColumnListItem type=\"Navigation\" press=\"onPress\"/>\n\t\t\t\t\t\t\t\t\t\t</m:items>\n\t\t\t\t\t\t\t\t\t</m:Table>\n\t\t\t\t\t\t\t\t\t<smartTable:layoutData>\n\t\t\t\t\t\t\t\t\t\t<m:FlexItemData growFactor=\"1\" baseSize=\"0%\"/>\n\t\t\t\t\t\t\t\t\t</smartTable:layoutData>\n\t\t\t\t\t\t\t\t</smartTable:SmartTable>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t</f:formContainers>\n\t\t\t</f:Form>\n\t\t</semantic:content>\n\t\t<semantic:customFooterContent>\n\t\t\t<m:Button text=\"Enviar E-mail\" type=\"Transparent\" icon=\"sap-icon://email\" iconFirst=\"true\" width=\"auto\" enabled=\"true\" visible=\"true\"\n\t\t\t\ticonDensityAware=\"false\" press=\"onEmail\" tooltip=\"Enviar E-mail aos vencedores\"/>\n\t\t</semantic:customFooterContent>\n\t</semantic:DetailPage>\n</mvc:View>",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/view/Veiculo.view.xml": "<mvc:View controllerName=\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.Veiculo\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns=\"sap.m\"\n\txmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:m=\"sap.m\" xmlns:footerbar=\"sap.ushell.ui.footerbar\"\n\txmlns:sv=\"sap.ui.comp.smartvariants\" xmlns:f=\"sap.ui.layout.form\" xmlns:core=\"sap.ui.core\" xmlns:l=\"controls\"\n\txmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\" width=\"100%\" height=\"100%\">\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"Informações do Veículo\"\n\t\tbusy=\"{veiculoView>/busy}\" busyIndicatorDelay=\"{veiculoView>/delay}\">\n\t\t<semantic:content>\n\t\t\t<f:Form class=\"editableForm\" editable=\"true\">\n\t\t\t\t<f:layout>\n\t\t\t\t\t<f:ResponsiveGridLayout labelSpanXL=\"6\" labelSpanL=\"6\" labelSpanM=\"6\" labelSpanS=\"12\" adjustLabelSpan=\"true\" emptySpanXL=\"0\" emptySpanL=\"0\"\n\t\t\t\t\t\temptySpanM=\"0\" emptySpanS=\"0\" columnsXL=\"3\" columnsL=\"3\" columnsM=\"3\" singleContainerFullSize=\"true\"/>\n\t\t\t\t</f:layout>\n\t\t\t</f:Form>\n\t\t\t<f:Form class=\"editableForm\" editable=\"true\">\n\t\t\t\t<f:layout>\n\t\t\t\t\t<f:ResponsiveGridLayout labelSpanXL=\"5\" labelSpanL=\"5\" labelSpanM=\"5\" labelSpanS=\"12\" adjustLabelSpan=\"true\" emptySpanXL=\"0\" emptySpanL=\"0\"\n\t\t\t\t\t\temptySpanM=\"0\" emptySpanS=\"0\" columnsXL=\"3\" columnsL=\"3\" columnsM=\"3\" singleContainerFullSize=\"true\"/>\n\t\t\t\t</f:layout>\n\t\t\t\t<f:formContainers>\n\t\t\t\t\t<f:FormContainer>\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{Bukrs}\" id=\"IdBukrs2\" editable=\"false\" valueHelpRequest=\"onHelpWerks\" showValueHelp=\"true\" change=\"onChangeWerks\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Empresa\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{WerksO}\" id=\"IdWerksO2\" editable=\"false\" valueHelpRequest=\"onHelpCarteira\" showValueHelp=\"true\" change=\"onChangeCarteira\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Centro\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{Objeto}\" id=\"IdObjeto\" editable=\"false\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Objeto\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t\t<!--<MaskInput mask=\"9999999999999\" placeholderSymbol=\"\" placeholder=\"Insira objeto\" editable=\"true\" id=\"IdObjeto\"/>-->\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t\t<f:FormContainer>\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{IdSolicitacao}\" id=\"IdSolicitacao\" editable=\"false\" valueHelpRequest=\"onHelpPrioridade\" showValueHelp=\"true\"\n\t\t\t\t\t\t\t\t\t\tchange=\"onChangePrioridade\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Id Orçamento\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{IdRota}\" editable=\"false\" id=\"IdRota\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Id da Rota\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t\t<f:FormContainer>\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{TpVeiculo}\" id=\"IdTpVeiculo2\" editable=\"false\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Tipo Veículo\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{NrTransp}\" id=\"NrTransp\" editable=\"false\" visible=\"false\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"N° Transporte\" design=\"Bold\" visible=\"false\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"{NrTransp}\" id=\"IdNrTransp\" editable=\"true\" placeholder=\"Ex.: JSL \"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Transportadora\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t</f:formContainers>\n\t\t\t</f:Form>\n\t\t\t<f:Form class=\"editableForm\" editable=\"true\">\n\t\t\t\t<f:layout>\n\t\t\t\t\t<f:ResponsiveGridLayout labelSpanXL=\"6\" labelSpanL=\"6\" labelSpanM=\"6\" labelSpanS=\"12\" adjustLabelSpan=\"true\" emptySpanXL=\"0\" emptySpanL=\"0\"\n\t\t\t\t\t\temptySpanM=\"0\" emptySpanS=\"0\" columnsXL=\"3\" columnsL=\"3\" columnsM=\"3\" singleContainerFullSize=\"true\"/>\n\t\t\t\t</f:layout>\n\t\t\t\t<f:formContainers>\n\t\t\t\t\t<f:FormContainer>\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdVigencia\" editable=\"true\" placeholder=\"Ex.: 12\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"Meses\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Vigencia\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdNegociacao\" editable=\"true\" placeholder=\"Ex.: Cabreúva-SP x Alumínio-SP \" change=\"OnCalcule\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Negociação\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdOrcBaseline\" editable=\"true\" placeholder=\"0.00\" change=\"OnCalcule\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"R$\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Orç. Baseline\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdVolume\" editable=\"true\" placeholder=\"Ex.:1580.00\" change=\"OnCalcule\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"TON\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Volume\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IDDataBase\" editable=\"true\" type=\"Date\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Data Base\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t\t<f:FormContainer>\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdAtPreco\" editable=\"true\" placeholder=\"Ex.:Repactuação\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Preço Atual\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" valueHelpRequest=\"OnZterm\" showValueHelp=\"true\" showSuggestion=\"true\" startSuggestion=\"0\"\n\t\t\t\t\t\t\t\t\t\tsuggestionItems=\"{/ZET_CBMM_CF_CONDPAG_HSet}\" id=\"IdPrazoPag\" width=\"100%\" editable=\"true\" placeholder=\"Ex.:30DDL\">\n\t\t\t\t\t\t\t\t\t\t<suggestionItems>\n\t\t\t\t\t\t\t\t\t\t\t<core:Item text=\"Zterm\"/>\n\t\t\t\t\t\t\t\t\t\t</suggestionItems>\n\t\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Prazo Pagamento\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdIncoterm\" editable=\"true\" placeholder=\"Ex.:FOB\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Incoterm\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdPerformance\" editable=\"true\" change=\"OnCalcule\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"%\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Performance\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdSaving\" editable=\"true\" placeholder=\"0.00\" change=\"OnCalcule\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"R$\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Saving\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t\t<f:FormContainer>\n\t\t\t\t\t\t<f:formElements>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdTco\" editable=\"true\" placeholder=\"0.00\" change=\"OnCalcule\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"R$\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Tco\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<!--<f:fields>-->\n\t\t\t\t\t\t\t\t<!--\t<Input value=\"\" id=\"IdAproTec\" editable=\"true\" placeholder=\"Ex.: Sim/Não\"/>-->\n\t\t\t\t\t\t\t\t<!--</f:fields>-->\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<RadioButtonGroup id=\"IdAproTec\" columns=\"2\" valueState=\"None\" class=\"sapUiMediumMarginBottom\">\n\t\t\t\t\t\t\t\t\t\t<buttons>\n\t\t\t\t\t\t\t\t\t\t\t<RadioButton id=\"APRO\" text=\"Sim\"/>\n\t\t\t\t\t\t\t\t\t\t\t<RadioButton id=\"NAPRO\" text=\"Não\"/>\n\t\t\t\t\t\t\t\t\t\t</buttons>\n\t\t\t\t\t\t\t\t\t</RadioButtonGroup>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Aprovado Tec.\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<!--<f:FormElement>-->\n\t\t\t\t\t\t\t<!--<f:fields>-->\n\t\t\t\t\t\t\t<!--\t<Input value=\"\" id=\"IdHabQuali\" editable=\"true\" placeholder=\"Ex.: Habilitado/Desabilitado\"/>-->\n\t\t\t\t\t\t\t<!--</f:fields>-->\n\t\t\t\t\t\t\t<!--\t<f:fields>-->\n\t\t\t\t\t\t\t<!--\t\t<RadioButtonGroup id=\"IdHabQuali\" columns=\"2\" valueState=\"None\" class=\"sapUiMediumMarginBottom\">-->\n\t\t\t\t\t\t\t<!--\t\t\t<buttons>-->\n\t\t\t\t\t\t\t<!--\t\t\t\t<RadioButton id=\"HAB\" text=\"Sim\"/>-->\n\t\t\t\t\t\t\t<!--\t\t\t\t<RadioButton id=\"NHAB\" text=\"Não\"/>-->\n\t\t\t\t\t\t\t<!--\t\t\t</buttons>-->\n\t\t\t\t\t\t\t<!--\t\t</RadioButtonGroup>-->\n\t\t\t\t\t\t\t<!--\t</f:fields>-->\n\t\t\t\t\t\t\t<!--\t<f:label>-->\n\t\t\t\t\t\t\t<!--\t\t<Label text=\"Habilitar Quali.\" design=\"Bold\"/>-->\n\t\t\t\t\t\t\t<!--\t</f:label>-->\n\t\t\t\t\t\t\t<!--</f:FormElement>-->\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdVlrNegoc\" editable=\"true\" placeholder=\"0.00\" change=\"OnCalcule\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Valor Negociado\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdVlrProp\" editable=\"true\" placeholder=\"0.00\" change=\"OnCalcule\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"R$\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Valor Proposto\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t\t<f:FormElement>\n\t\t\t\t\t\t\t\t<f:fields>\n\t\t\t\t\t\t\t\t\t<Input value=\"\" id=\"IdPedagio\" editable=\"true\" placeholder=\"0.00\" change=\"OnCalcule\"/>\n\t\t\t\t\t\t\t\t\t<Text text=\"R$\"/>\n\t\t\t\t\t\t\t\t</f:fields>\n\t\t\t\t\t\t\t\t<f:label>\n\t\t\t\t\t\t\t\t\t<Label text=\"Pedágio\" design=\"Bold\"/>\n\t\t\t\t\t\t\t\t</f:label>\n\t\t\t\t\t\t\t</f:FormElement>\n\t\t\t\t\t\t</f:formElements>\n\t\t\t\t\t</f:FormContainer>\n\t\t\t\t</f:formContainers>\n\t\t\t</f:Form>\n\t\t</semantic:content>\n\t\t<semantic:customFooterContent>\n\t\t\t<Button text=\"Voltar\" icon=\"sap-icon://undo\" iconFirst=\"true\" width=\"auto\" enabled=\"true\" visible=\"true\" iconDensityAware=\"false\"\n\t\t\t\tpress=\"onBack\" tooltip=\"Voltar\" id=\"B_Voltar\"/>\n\t\t</semantic:customFooterContent>\n\t</semantic:DetailPage>\n</mvc:View>",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\n\t<ViewSettingsDialog\n\t\tid=\"viewSettingsDialog\"\n\t\tconfirm=\"onConfirmViewSettingsDialog\"\n\t\tresetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem\n\t\t\t\tid=\"filterItems\"\n\t\t\t\ttext=\"{i18n>masterFilterName}\"\n\t\t\t\tkey=\"Price\"\n\t\t\t\tmultiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\ttext=\"{i18n>masterFilter1}\"\n\t\t\t\t\t\tkey=\"Filter1\"\n\t\t\t\t\t\tid=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\ttext=\"{i18n>masterFilter2}\"\n\t\t\t\t\t\tkey=\"Filter2\"\n\t\t\t\t\t\tid=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n\n</core:FragmentDefinition>",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/view/Master.view.xml": "<mvc:View\n\tcontrollerName=\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.Master\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:core=\"sap.ui.core\"\n\txmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\">\n\t<semantic:MasterPage id=\"page\" title=\"Fretes\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"{= !${device>/support/touch} }\" tooltip=\"{i18n>masterSearchTooltip}\" width=\"100%\"\n\t\t\t\t\t\tsearch=\"onSearch\"></SearchField>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\t\t<semantic:content>\n\t\t\t<PullToRefresh id=\"pullToRefresh\" visible=\"{device>/support/touch}\" refresh=\"onRefresh\"/>\n\t\t\t<!-- For client side filtering add this to the items attribute: parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List id=\"list\"\n\t\t\t\titems=\"{ path: '/ZET_CBMM_CF_FRETESet',\n\t\t\t\tfilters:{ path: 'Status', operator: 'EQ', value1: 'MAIL'},\n\t\t\t\tsorter: { path: 'IdSolicitacao', descending: false}, groupHeaderFactory: '.createGroupHeader'}\"\n\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem type=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\" press=\"onSelectionChange\"  title=\"Id da Solicitação: {IdSolicitacao}\"\n\t\t\t\t\t\ticonDensityAware=\"false\" id=\"idRota\">\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"Empresa: {Bukrs}\" id=\"Bukrs\" visible=\"true\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t \t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"Centro: {WerksO}\" id=\"WerksO\" visible=\"true\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"Rota: {IdRota}\" id=\"IdRota\" visible=\"false\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"Id Solicitação: {IdSolicitacao}\" id=\"idSolicitacao\" visible=\"true\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"Status: MAIL\" id=\"IdStatus\" visible=\"true\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t</semantic:MasterPage>\n</mvc:View>",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/view/NotFound.view.xml": "<mvc:View\r\n\tcontrollerName=\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.controller.BaseController\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<MessagePage\r\n\t\tid=\"page\"\r\n\t\ttitle=\"{i18n>notFoundTitle}\"\r\n\t\ttext=\"{i18n>notFoundText}\"\r\n\t\ticon=\"{sap-icon://document}\"\r\n\t\tdescription=\"\"\r\n\t\tshowNavButton=\"{device>/system/phone}\"\r\n\t\tnavButtonPress=\"onNavBack\">\r\n\t</MessagePage>\r\n\r\n</mvc:View>",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/model/models.js": "sap.ui.define([\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/Device\"\n\t], function (JSONModel, Device) {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\tcreateDeviceModel : function () {\n\t\t\t\tvar oModel = new JSONModel(Device);\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t},\n\n\t\t\tcreateFLPModel : function () {\n\t\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\n\t\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\n\t\t\t\t\toModel = new JSONModel({\n\t\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\n\t\t\t\t\t});\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/model/formatter.js": "sap.ui.define([\n\t], function () {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Rounds the currency value to 2 digits\n\t\t\t *\n\t\t\t * @public\n\t\t\t * @param {string} sValue value to be formatted\n\t\t\t * @returns {string} formatted currency value with 2 digits\n\t\t\t */\n\t\t\tcurrencyValue : function (sValue) {\n\t\t\t\tif (!sValue) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/model/GroupSortState.js": "sap.ui.define([\r\n\t\t\"sap/ui/base/Object\",\r\n\t\t\"sap/ui/model/Sorter\"\r\n\t], function (BaseObject, Sorter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseObject.extend(\"ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.model.GroupSortState\", {\r\n\r\n\t\t/**\r\n\t\t * Creates sorters and groupers for the master list.\r\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\r\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\r\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\r\n\t\t * @class\r\n\t\t * @public\r\n\t\t * @param {sap.ui.model.json.JSONModel} oViewModel the model of the current view\r\n\t\t * @param {function} fnGroupFunction the grouping function to be applied\r\n\t\t * @alias ZCBMM_MAILTRAN.ZCBMM_MAILTRAN.model.GroupSortState\r\n\t\t */\r\n\t\tconstructor: function (oViewModel, fnGroupFunction) {\r\n\t\t\tthis._oViewModel = oViewModel;\r\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Sorts by IdSolicitacao, or by IdSolicitacao\r\n\t\t *\r\n\t\t * @param {string} sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tsort: function (sKey) {\r\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\r\n\r\n\t\t\tif (sGroupedBy !== \"None\") {\r\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\r\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\r\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\r\n\t\t\t}\r\n\r\n\t\t\treturn [new Sorter(sKey, false)];\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Groups by IdSolicitacao, or resets the grouping for the key \"None\"\r\n\t\t *\r\n\t\t * @param {string} sKey - the key of the field used for grouping\r\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\r\n\t\t */\r\n\t\tgroup: function (sKey) {\r\n\t\t\tvar aSorters = [];\r\n\r\n\t\t\tif (sKey === \"IdSolicitacao\") {\r\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"IdSolicitacao\");\r\n\r\n\t\t\t\taSorters.push(\r\n\t\t\t\t\tnew Sorter(\"IdSolicitacao\", false,\r\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\r\n\t\t\t\t);\r\n\t\t\t} else if (sKey === \"None\") {\r\n\t\t\t\t// select the default sorting again\r\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"IdSolicitacao\");\r\n\t\t\t}\r\n\r\n\t\t\treturn aSorters;\r\n\t\t}\r\n\r\n\t});\r\n});",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/model/grouper.js": "sap.ui.define([\n\t], function () {\n\t\t\"use strict\";\n\n\t\t/*\n\t\t * Use this file to implement your custom grouping functions\n\t\t * The predefined functions are simple examples and might be replaced by your more complex implementations\n\t\t * to be called with .bind() and handed over to a sap.ui.model.Sorter\n\t\t * return value for all your functions is an object with  key-text pairs\n\t\t * the oContext parameter is not under your control!\n\t\t */\n\n\t\treturn {\n\n\t\t/**\n\t\t * Groups the items by a price in two groups: Lesser equal than 20 and greater than 20\n\t\t * This grouping function needs the resource bundle so we pass it as a dependency\n\t\t * @param {sap.ui.model.resource.ResourceModel} oResourceBundle the resource bundle of your i18n model\n\t\t * @returns {Function} the grouper function you can pass to your sorter\n\t\t */\n\t\tgroupUnitNumber : function (oResourceBundle) {\n\t\t\treturn function (oContext) {\n\t\t\t\tvar iPrice = oContext.getProperty(\"IdSolicitacao\"),\n\t\t\t\t\tsKey,\n\t\t\t\t\tsText;\n\n\t\t\t\t\tif (iPrice <= 20) {\n\t\t\t\t\t\tsKey = \"LE20\";\n\t\t\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header1\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsKey = \"GT20\";\n\t\t\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header2\");\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkey: sKey,\n\t\t\t\t\t\ttext: sText\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t};\n\t}\n);",
		"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/localService/mockserver.js": "sap.ui.define([\r\n\t\t\"sap/ui/core/util/MockServer\"\r\n\t], function (MockServer) {\r\n\t\t\"use strict\";\r\n\r\n\t\tvar oMockServer,\r\n\t\t\t_sAppModulePath = \"ZCBMM_MAILTRAN/ZCBMM_MAILTRAN/\",\r\n\t\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\t\treturn {\r\n\r\n\t\t\t/**\r\n\t\t\t * Initializes the mock server.\r\n\t\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\r\n\t\t\tinit : function () {\r\n\t\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\t\tsEntity = \"ZET_CBMM_CF_FRETESet\",\r\n\t\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\r\n\t\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\r\n\r\n\t\t\t\toMockServer = new MockServer({\r\n\t\t\t\t\trootUri : sMockServerUrl\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// configure mock server with a delay of 1s\r\n\t\t\t\tMockServer.config({\r\n\t\t\t\t\tautoRespond : true,\r\n\t\t\t\t\tautoRespondAfter : (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Simulate a manual back-end call\r\n\t\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\t\tsMockdataBaseUrl : sJsonFilesUrl,\r\n\t\t\t\t\tbGenerateMissingMockData : true\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\t\taRequest.response = function(oXhr){\r\n\t\t\t\t\t\t\toXhr.respond(iErrCode, {\"Content-Type\": \"text/plain;charset=utf-8\"}, sMessage);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t// handling the metadata error test\r\n\t\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\r\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Handling request errors\r\n\t\t\t\tif (sErrorParam) {\r\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\r\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\toMockServer.setRequests(aRequests);\r\n\t\t\t\toMockServer.start();\r\n\r\n\t\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t\t */\r\n\t\t\tgetMockServer : function () {\r\n\t\t\t\treturn oMockServer;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t}\r\n);"
	}
});