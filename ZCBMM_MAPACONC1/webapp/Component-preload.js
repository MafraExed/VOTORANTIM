/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/Component-preload",
	"modules": {
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/Component.js": "/* global document */\r\nsap.ui.define([\r\n\t\t\"sap/ui/core/UIComponent\",\r\n\t\t\"sap/ui/Device\",\r\n\t\t\"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/model/models\",\r\n\t\t\"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/ListSelector\",\r\n\t\t\"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/ErrorHandler\"\r\n\t], function (UIComponent, Device, models, ListSelector, ErrorHandler) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn UIComponent.extend(\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.Component\", {\r\n\r\n\t\t\tmetadata : {\r\n\t\t\t\tmanifest : \"json\"\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t\t * In this method, the FLP and device models are set and the router is initialized.\r\n\t\t\t * @public\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tinit : function () {\r\n\t\t\t\tthis.oListSelector = new ListSelector();\r\n\t\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t\t// set the device model\r\n\t\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\t\t\t\t// set the FLP model\r\n\t\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\r\n\r\n\t\t\t\t// call the base component's init function and create the App view\r\n\t\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t\t// create the views based on the url/hash\r\n\t\t\t\tthis.getRouter().initialize();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * The component is destroyed by UI5 automatically.\r\n\t\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\r\n\t\t\t * @public\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tdestroy : function () {\r\n\t\t\t\tthis.oListSelector.destroy();\r\n\t\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t\t// call the base component's destroy function\r\n\t\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\r\n\t\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t\t * @public\r\n\t\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\r\n\t\t\t */\r\n\t\t\tgetContentDensityClass : function() {\r\n\t\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r\n\t\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this._sContentDensityClass;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\t\"sap/ui/base/Object\",\r\n\t\t\"sap/m/MessageBox\"\r\n\t], function (UI5Object, MessageBox) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn UI5Object.extend(\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.ErrorHandler\", {\r\n\r\n\t\t\t/**\r\n\t\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t\t * @class\r\n\t\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\r\n\t\t\t * @public\r\n\t\t\t * @alias ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.ErrorHandler\r\n\t\t\t */\r\n\t\t\tconstructor : function (oComponent) {\r\n\t\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\r\n\t\t\t\tthis._oComponent = oComponent;\r\n\t\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\t\tthis._oModel.attachMetadataFailed(function (oEvent) {\r\n\t\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tthis._oModel.attachRequestFailed(function (oEvent) {\r\n\t\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\r\n\t\t\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t\t * Only the first error message will be display.\r\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_showServiceError : function (sDetails) {\r\n\t\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._bMessageOpen = true;\r\n\t\t\t\tMessageBox.error(\r\n\t\t\t\t\tthis._sErrorText,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\r\n\t\t\t\t\t\tdetails : sDetails,\r\n\t\t\t\t\t\tstyleClass : this._oComponent.getContentDensityClass(),\r\n\t\t\t\t\t\tactions : [MessageBox.Action.CLOSE],\r\n\t\t\t\t\t\tonClose : function () {\r\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t\t}.bind(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/Master.controller.js": "/*global history */\r\nsap.ui.define([\r\n\t\t\"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/BaseController\",\r\n\t\t\"sap/ui/model/json/JSONModel\",\r\n\t\t\"sap/ui/core/routing/History\",\r\n\t\t\"sap/ui/model/Filter\",\r\n\t\t\"sap/ui/model/Sorter\",\r\n\t\t\"sap/ui/model/FilterOperator\",\r\n\t\t\"sap/m/GroupHeaderListItem\",\r\n\t\t\"sap/ui/Device\",\r\n\t\t\"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/model/formatter\"\r\n\t], function (BaseController, JSONModel, History, Filter, Sorter, FilterOperator, GroupHeaderListItem, Device, formatter) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.extend(\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.Master\", {\r\n\r\n\t\t\tformatter: formatter,\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* lifecycle methods                                           */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonInit : function () {\r\n\t\t\t\t// Control state model\r\n\t\t\t\tvar oList = this.byId(\"list\"),\r\n\t\t\t\t\toViewModel = this._createViewModel(),\r\n\t\t\t\t\t// Put down master list's original value for busy indicator delay,\r\n\t\t\t\t\t// so it can be restored later on. Busy handling on the master list is\r\n\t\t\t\t\t// taken care of by the master list itself.\r\n\t\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\r\n\r\n\t\t\t\tthis._oGroupFunctions = {\r\n\t\t\t\t\tIdSolicitacao : function(oContext) {\r\n\t\t\t\t\t\tvar iGrouper = oContext.getProperty('IdSolicitacao'),\r\n\t\t\t\t\t\t\tkey, text;\r\n\t\t\t\t\t\tif (iGrouper <= 20) {\r\n\t\t\t\t\t\t\tkey = \"LE20\";\r\n\t\t\t\t\t\t\ttext = this.getResourceBundle().getText(\"masterGroup1Header1\");\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tkey = \"GT20\";\r\n\t\t\t\t\t\t\ttext = this.getResourceBundle().getText(\"masterGroup1Header2\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tkey: key,\r\n\t\t\t\t\t\t\ttext: text\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._oList = oList;\r\n\t\t\t\t// keeps the filter and search state\r\n\t\t\t\tthis._oListFilterState = {\r\n\t\t\t\t\taFilter : [],\r\n\t\t\t\t\taSearch : []\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.setModel(oViewModel, \"masterView\");\r\n\t\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t\t// break after the busy indication for loading the view's meta data is\r\n\t\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\t\toList.attachEventOnce(\"updateFinished\", function(){\r\n\t\t\t\t\t// Restore original busy indicator delay for the list\r\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.getView().addEventDelegate({\r\n\t\t\t\t\tonBeforeFirstShow: function () {\r\n\t\t\t\t\t\tthis.getOwnerComponent().oListSelector.setBoundMasterList(oList);\r\n\t\t\t\t\t}.bind(this)\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\r\n\t\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\r\n\t\t\t},\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* event handlers                                              */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * After list data is available, this handler method updates the\r\n\t\t\t * master list counter\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonUpdateFinished : function (oEvent) {\r\n\t\t\t\t// update the master list object counter after new data is loaded\r\n\t\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for the master search field. Applies current\r\n\t\t\t * filter value and triggers a new search. If the search field's\r\n\t\t\t * 'refresh' button has been pressed, no new search is triggered\r\n\t\t\t * and the list binding is refresh instead.\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the search event\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonSearch : function (oEvent) {\r\n\t\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t\t// This is visible if you select any master list item.\r\n\t\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t\t// refresh the list binding.\r\n\t\t\t\t\tthis.onRefresh();\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\t\tif (sQuery) {\r\n\t\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"Status\", FilterOperator.Contains, sQuery)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._oListFilterState.aSearch = [];\r\n\t\t\t\t}\r\n\t\t\t\tthis._applyFilterSearch();\r\n\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t\t * and group settings and refreshes the list binding.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonRefresh : function () {\r\n\t\t\t\tthis._oList.getBinding(\"items\").refresh();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for the filter, sort and group buttons to open the ViewSettingsDialog.\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the button press event\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonOpenViewSettings : function (oEvent) {\r\n\t\t\t\tif (!this._oViewSettingsDialog) {\r\n\t\t\t\t\tthis._oViewSettingsDialog = sap.ui.xmlfragment(\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.view.ViewSettingsDialog\", this);\r\n\t\t\t\t\tthis.getView().addDependent(this._oViewSettingsDialog);\r\n\t\t\t\t\t// forward compact/cozy style into Dialog\r\n\t\t\t\t\tthis._oViewSettingsDialog.addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t\t\t}\r\n\t\t\t\tvar sDialogTab = \"sort\";\r\n\t\t\t\tif (oEvent.getSource() instanceof sap.m.Button) {\r\n\t\t\t\t\tvar sButtonId = oEvent.getSource().sId;\r\n\t\t\t\t\tif (sButtonId.match(\"filter\")) {\r\n\t\t\t\t\t\tsDialogTab = \"filter\";\r\n\t\t\t\t\t} else if (sButtonId.match(\"group\")) {\r\n\t\t\t\t\t\tsDialogTab = \"group\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._oViewSettingsDialog.open(sDialogTab);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler called when ViewSettingsDialog has been confirmed, i.e.\r\n\t\t\t * has been closed with 'OK'. In the case, the currently chosen filters, sorters or groupers\r\n\t\t\t * are applied to the master list, which can also mean that they\r\n\t\t\t * are removed from the master list, in case they are\r\n\t\t\t * removed in the ViewSettingsDialog.\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the confirm event\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonConfirmViewSettingsDialog : function (oEvent) {\r\n\t\t\t\tvar aFilterItems = oEvent.getParameters().filterItems,\r\n\t\t\t\t\taFilters = [],\r\n\t\t\t\t\taCaptions = [];\r\n\r\n\t\t\t\t// update filter state:\r\n\t\t\t\t// combine the filter array and the filter string\r\n\t\t\t\taFilterItems.forEach(function (oItem) {\r\n\t\t\t\t\tswitch (oItem.getKey()) {\r\n\t\t\t\t\t\tcase \"Filter1\" :\r\n\t\t\t\t\t\t\taFilters.push(new Filter(\"IdSolicitacao\", FilterOperator.LE, 100));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"Filter2\" :\r\n\t\t\t\t\t\t\taFilters.push(new Filter(\"IdSolicitacao\", FilterOperator.GT, 100));\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault :\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\taCaptions.push(oItem.getText());\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis._oListFilterState.aFilter = aFilters;\r\n\t\t\t\tthis._updateFilterBar(aCaptions.join(\", \"));\r\n\t\t\t\tthis._applyFilterSearch();\r\n\t\t\t\tthis._applySortGroup(oEvent);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Apply the chosen sorter and grouper to the master list\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the confirm event\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_applySortGroup: function (oEvent) {\r\n\t\t\t\tvar mParams = oEvent.getParameters(),\r\n\t\t\t\t\tsPath,\r\n\t\t\t\t\tbDescending,\r\n\t\t\t\t\taSorters = [];\r\n\t\t\t\t// apply sorter to binding\r\n\t\t\t\t// (grouping comes before sorting)\r\n\t\t\t\tif (mParams.groupItem) {\r\n\t\t\t\t\tsPath = mParams.groupItem.getKey();\r\n\t\t\t\t\tbDescending = mParams.groupDescending;\r\n\t\t\t\t\tvar vGroup = this._oGroupFunctions[sPath];\r\n\t\t\t\t\taSorters.push(new Sorter(sPath, bDescending, vGroup));\r\n\t\t\t\t}\r\n\t\t\t\tsPath = mParams.sortItem.getKey();\r\n\t\t\t\tbDescending = mParams.sortDescending;\r\n\t\t\t\taSorters.push(new Sorter(sPath, bDescending));\r\n\t\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for the list selection event\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonSelectionChange : function (oEvent) {\r\n\t\t\t\tvar oList = oEvent.getSource(),\r\n\t\t\t\t\tbSelected = oEvent.getParameter(\"selected\");\r\n\r\n\t\t\t\t// skip navigation when deselecting an item in multi selection mode\r\n\t\t\t\tif (!(oList.getMode() === \"MultiSelect\" && !bSelected)) {\r\n\t\t\t\t\t// get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).\r\n\t\t\t\t\tthis._showDetail(oEvent.getParameter(\"listItem\") || oEvent.getSource());\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\r\n\t\t\t * If there was an object selected in the master list, that selection is removed.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonBypassed : function () {\r\n\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Used to create GroupHeaders with non-capitalized caption.\r\n\t\t\t * These headers are inserted into the master list to\r\n\t\t\t * group the master list's items.\r\n\t\t\t * @param {Object} oGroup group whose text is to be displayed\r\n\t\t\t * @public\r\n\t\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\r\n\t\t\t */\r\n\t\t\tcreateGroupHeader : function (oGroup) {\r\n\t\t\t\treturn new GroupHeaderListItem({\r\n\t\t\t\t\ttitle : oGroup.text,\r\n\t\t\t\t\tupperCase : false\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for navigating back.\r\n\t\t\t * It there is a history entry or an previous app-to-app navigation we go one step back in the browser history\r\n\t\t\t * If not, it will navigate to the shell home\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonNavBack : function() {\r\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash(),\r\n\t\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\t\tif (sPreviousHash !== undefined || !oCrossAppNavigator.isInitialNavigation()) {\r\n\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toCrossAppNavigator.toExternal({\r\n\t\t\t\t\t\ttarget: {shellHash: \"#Shell-home\"}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* begin: internal methods                                     */\r\n\t\t\t/* =========================================================== */\r\n\r\n\r\n\t\t\t_createViewModel : function() {\r\n\t\t\t\treturn new JSONModel({\r\n\t\t\t\t\tisFilterBarVisible: false,\r\n\t\t\t\t\tfilterBarLabel: \"\",\r\n\t\t\t\t\tdelay: 0,\r\n\t\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\r\n\t\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\r\n\t\t\t\t\tsortBy: \"Status\",\r\n\t\t\t\t\tgroupBy: \"None\"\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t_onMasterMatched :  function() {\r\n\t\t\t\t//Set the layout property of the FCL control to 'OneColumn'\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/layout\", \"OneColumn\");\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shows the selected item on the detail page\r\n\t\t\t * On phones a additional history entry is created\r\n\t\t\t * @param {sap.m.ObjectListItem} oItem selected Item\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_showDetail : function (oItem) {\r\n\t\t\t\tvar bReplace = !Device.system.phone;\r\n\t\t\t\t// set the layout property of FCL control to show two columns\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/layout\", \"TwoColumnsMidExpanded\");\r\n\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\tBukrs: \"2001\",\r\n\t\t\t\t\tWerks: oItem.getBindingContext().getProperty(\"WerksO\"),\r\n\t\t\t\t\tIdSolicitacao: oItem.getBindingContext().getProperty(\"IdSolicitacao\")\r\n\t\t\t\t}, bReplace);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Sets the item count on the master list header\r\n\t\t\t * @param {integer} iTotalItems the total number of items in the list\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_updateListItemCount : function (iTotalItems) {\r\n\t\t\t\tvar sTitle;\r\n\t\t\t\t// only update the counter if the length is final\r\n\t\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\r\n\t\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_applyFilterSearch : function () {\r\n\t\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\r\n\t\t\t\t\toViewModel = this.getModel(\"masterView\");\r\n\t\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\r\n\t\t\t\t// changes the noDataText of the list in case there are no filter results\r\n\t\t\t\tif (aFilters.length !== 0) {\r\n\t\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\r\n\t\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\r\n\t\t\t\t\t// only reset the no data text to default when no new search was triggered\r\n\t\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\r\n\t\t\t * @param {string} sFilterBarText the selected filter value\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_updateFilterBar : function (sFilterBarText) {\r\n\t\t\t\tvar oViewModel = this.getModel(\"masterView\");\r\n\t\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\r\n\t\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/BaseController.js": "/*global history */\r\nsap.ui.define([\r\n\t\t\"sap/ui/core/mvc/Controller\",\r\n\t\t\"sap/ui/core/routing/History\"\r\n\t], function (Controller, History) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn Controller.extend(\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.BaseController\", {\r\n\t\t\t/**\r\n\t\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t\t * @public\r\n\t\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t\t */\r\n\t\t\tgetRouter : function () {\r\n\t\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t\t * @public\r\n\t\t\t * @param {string} sName the model name\r\n\t\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t\t */\r\n\t\t\tgetModel : function (sName) {\r\n\t\t\t\treturn this.getView().getModel(sName);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t\t * @public\r\n\t\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t\t * @param {string} sName the model name\r\n\t\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t\t */\r\n\t\t\tsetModel : function (oModel, sName) {\r\n\t\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for getting the resource bundle.\r\n\t\t\t * @public\r\n\t\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t\t */\r\n\t\t\tgetResourceBundle : function () {\r\n\t\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for navigating back.\r\n\t\t\t * It there is a history entry or an previous app-to-app navigation we go one step back in the browser history\r\n\t\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonNavBack : function() {\r\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash(),\r\n\t\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\r\n\r\n\t\t\t\t\tif (sPreviousHash !== undefined || !oCrossAppNavigator.isInitialNavigation()) {\r\n\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.getRouter().navTo(\"master\", {}, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/ListSelector.js": "sap.ui.define([\r\n\t\t\"sap/ui/base/Object\",\r\n\t\t\"sap/m/GroupHeaderListItem\"\r\n\t], function (BaseObject, GroupHeaderListItem) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseObject.extend(\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.ListSelector\", {\r\n\r\n\t\t\t/**\r\n\t\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\r\n\t\t\t * function.\r\n\t\t\t * @class\r\n\t\t\t * @public\r\n\t\t\t * @alias ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.ListSelector\r\n\t\t\t */\r\n\r\n\t\t\tconstructor : function () {\r\n\t\t\t\tthis._oWhenListHasBeenSet = new Promise(function (fnResolveListHasBeenSet) {\r\n\t\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\r\n\t\t\t\t}.bind(this));\r\n\t\t\t\t// This promise needs to be created in the constructor, since it is allowed to\r\n\t\t\t\t// invoke selectItem functions before calling setBoundMasterList\r\n\t\t\t\tthis.oWhenListLoadingIsDone = new Promise(function (fnResolve, fnReject) {\r\n\t\t\t\t\t// Used to wait until the setBound masterList function is invoked\r\n\t\t\t\t\tthis._oWhenListHasBeenSet\r\n\t\t\t\t\t\t.then(function (oList) {\r\n\t\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\r\n\t\t\t\t\t\t\t\tfunction () {\r\n\t\t\t\t\t\t\t\t\tif (this._oList.getItems().length) {\r\n\t\t\t\t\t\t\t\t\t\tfnResolve({\r\n\t\t\t\t\t\t\t\t\t\t\tlist : oList\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t// No items in the list\r\n\t\t\t\t\t\t\t\t\t\tfnReject({\r\n\t\t\t\t\t\t\t\t\t\t\tlist : oList\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}.bind(this)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}.bind(this));\r\n\t\t\t\t}.bind(this));\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\r\n\t\t\t * May only be invoked once per ListSelector instance.\r\n\t\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tsetBoundMasterList : function (oList) {\r\n\t\t\t\tthis._oList = oList;\r\n\t\t\t\tthis._fnResolveListHasBeenSet(oList);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\r\n\t\t\t * no selection/scrolling will happen\r\n\t\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tselectAListItem : function (sBindingPath) {\r\n\r\n\t\t\t\tthis.oWhenListLoadingIsDone.then(\r\n\t\t\t\t\tfunction () {\r\n\t\t\t\t\t\tvar oList = this._oList,\r\n\t\t\t\t\t\t\toSelectedItem;\r\n\r\n\t\t\t\t\t\tif (oList.getMode() === \"None\") {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\toSelectedItem = oList.getSelectedItem();\r\n\r\n\t\t\t\t\t\t// skip update if the current selection is already matching the object path\r\n\t\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\toList.getItems().some(function (oItem) {\r\n\t\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\r\n\t\t\t\t\t\t\t\toList.setSelectedItem(oItem);\r\n\t\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}.bind(this),\r\n\t\t\t\t\tfunction () {\r\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath + \" because the list encountered an error or had no items\");\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Removes all selections from master list.\r\n\t\t\t * Does not trigger 'selectionChange' event on master list, though.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tclearMasterListSelection : function () {\r\n\t\t\t\t//use promise to make sure that 'this._oList' is available\r\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\r\n\t\t\t\t\tthis._oList.removeSelections(true);\r\n\t\t\t\t}.bind(this));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n);",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/NotFound.controller.js": "sap.ui.define([\r\n\t\"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/BaseController\"\r\n\t], function (BaseController) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.extend(\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.NotFound\", {\r\n\r\n\t\t\tonInit: function () {\r\n\t\t\t\tthis.getRouter().getTarget(\"notFound\").attachDisplay(this._onNotFoundDisplayed, this);\r\n\t\t\t},\r\n\r\n\t\t\t_onNotFoundDisplayed : function () {\r\n\t\t\t\t\tthis.getModel(\"appView\").setProperty(\"/layout\", \"OneColumn\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n);",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/Detail.controller.js": "/*global location */\r\nsap.ui.define([\r\n\t\"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/BaseController\",\r\n\t\"sap/ui/model/json/JSONModel\",\r\n\t\"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/model/formatter\"\r\n], function(BaseController, JSONModel, formatter) {\r\n\t\"use strict\";\r\n\r\n\treturn BaseController.extend(\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.Detail\", {\r\n\r\n\t\tformatter: formatter,\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* lifecycle methods                                           */\r\n\t\t/* =========================================================== */\r\n\r\n\t\tonInit: function() {\r\n\t\t\t// Model used to manipulate control states. The chosen values make sure,\r\n\t\t\t// detail page is busy indication immediately so there is no break in\r\n\t\t\t// between the busy indication for loading the view's meta data\r\n\t\t\tvar oViewModel = new JSONModel({\r\n\t\t\t\tbusy: false,\r\n\t\t\t\tdelay: 0\r\n\t\t\t});\r\n\r\n\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\r\n\r\n\t\t\tthis.setModel(oViewModel, \"detailView\");\r\n\r\n\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* event handlers                                              */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Event handler when the share by E-Mail button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonSendEmailPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tsap.m.URLHelper.triggerEmail(\r\n\t\t\t\tnull,\r\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\r\n\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler when the share in JAM button has been clicked\r\n\t\t * @public\r\n\t\t */\r\n\t\tonShareInJamPress: function() {\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\"),\r\n\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\r\n\t\t\t\t\tname: \"sap.collaboration.components.fiori.sharing.dialog\",\r\n\t\t\t\t\tsettings: {\r\n\t\t\t\t\t\tobject: {\r\n\t\t\t\t\t\t\tid: location.href,\r\n\t\t\t\t\t\t\tshare: oViewModel.getProperty(\"/shareOnJamTitle\")\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\toShareDialog.open();\r\n\t\t},\r\n\r\n\t\t/* =========================================================== */\r\n\t\t/* begin: internal methods                                     */\r\n\t\t/* =========================================================== */\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path and expands the aggregated line items.\r\n\t\t * @function\r\n\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onObjectMatched: function(oEvent) {\r\n\t\t\tvar Bukrs = oEvent.getParameter(\"arguments\").Bukrs;\r\n\t\t\tvar Werks = oEvent.getParameter(\"arguments\").Werks;\r\n\t\t\tvar IdSolicitacao = oEvent.getParameter(\"arguments\").IdSolicitacao;\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/layout\", \"TwoColumnsMidExpanded\");\r\n\t\t\tthis.getModel().metadataLoaded().then(function() {\r\n\t\t\t\tvar sObjectPath = this.getModel().createKey(\"ZET_CBMM_CF_FRETESet\", {\r\n\t\t\t\t\tBukrs: Bukrs,\r\n\t\t\t\t\tWerksO: Werks,\r\n\t\t\t\t\tIdSolicitacao: IdSolicitacao\r\n\t\t\t\t});\r\n\t\t\t\tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t}.bind(this));\r\n\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Binds the view to the object path. Makes sure that detail view displays\r\n\t\t * a busy indicator while data for the corresponding element binding is loaded.\r\n\t\t * @function\r\n\t\t * @param {string} sObjectPath path to the object to be bound to the view.\r\n\t\t * @private\r\n\t\t */\r\n\t\t_bindView: function(sObjectPath) {\r\n\t\t\t// Set busy indicator during view binding\r\n\t\t\tvar oViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\r\n\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\tthis.getView().bindElement({\r\n\t\t\t\tpath: sObjectPath,\r\n\t\t\t\tevents: {\r\n\t\t\t\t\tchange: this._onBindingChange.bind(this),\r\n\t\t\t\t\tdataRequested: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdataReceived: function() {\r\n\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t_onBindingChange: function() {\r\n\t\t\tvar oView = this.getView(),\r\n\t\t\t\toElementBinding = oView.getElementBinding();\r\n\r\n\t\t\t// No data for the binding\r\n\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\r\n\t\t\t\t// if object could not be found, the selection in the master list\r\n\t\t\t\t// does not make sense anymore.\r\n\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar sPath = oElementBinding.getPath(),\r\n\t\t\t\toResourceBundle = this.getResourceBundle(),\r\n\t\t\t\toObject = oView.getModel().getObject(sPath),\r\n\t\t\t\tsObjectId = oObject.IdSolicitacao,\r\n\t\t\t\tsObjectName = oObject.Status,\r\n\t\t\t\toViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\r\n\r\n\t\t\toViewModel.setProperty(\"/saveAsTileTitle\", oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\r\n\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\r\n\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\r\n\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\r\n\r\n\t\t\tvar smartTable = this.getView().byId(\"smartTable\");\r\n\t\t\tsmartTable.rebindTable(\"e\");\r\n\r\n\t\t\tvar smartTable2 = this.getView().byId(\"smartTable2\");\r\n\t\t\tsmartTable2.rebindTable(\"e\");\r\n\r\n\t\t\tvar smartTable3 = this.getView().byId(\"smartTable3\");\r\n\t\t\tsmartTable3.rebindTable(\"e\");\r\n\t\t},\r\n\r\n\t\t_onMetadataLoaded: function() {\r\n\t\t\t// Store original busy indicator delay for the detail view\r\n\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\r\n\t\t\t\toViewModel = this.getModel(\"detailView\");\r\n\r\n\t\t\t// Make sure busy indicator is displayed immediately when\r\n\t\t\t// detail view is displayed for the first time\r\n\t\t\toViewModel.setProperty(\"/delay\", 0);\r\n\r\n\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\r\n\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t// Restore original busy indicator delay for the detail view\r\n\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set the full screen mode to false and navigate to master page\r\n\t\t */\r\n\t\tonCloseDetailPress: function() {\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/actionButtonsInfo/midColumn/fullScreen\", false);\r\n\t\t\t// No item should be selected on master after detail page is closed\r\n\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\r\n\t\t\tthis.getRouter().navTo(\"master\");\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Toggle between full and non full screen mode.\r\n\t\t */\r\n\t\ttoggleFullScreen: function() {\r\n\t\t\tvar bFullScreen = this.getModel(\"appView\").getProperty(\"/actionButtonsInfo/midColumn/fullScreen\");\r\n\t\t\tthis.getModel(\"appView\").setProperty(\"/actionButtonsInfo/midColumn/fullScreen\", !bFullScreen);\r\n\t\t\tif (!bFullScreen) {\r\n\t\t\t\t// store current layout and go full screen\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/previousLayout\", this.getModel(\"appView\").getProperty(\"/layout\"));\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/layout\", \"MidColumnFullScreen\");\r\n\t\t\t} else {\r\n\t\t\t\t// reset to previous layout\r\n\t\t\t\tthis.getModel(\"appView\").setProperty(\"/layout\", this.getModel(\"appView\").getProperty(\"/previousLayout\"));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Opens the Action Sheet popover\r\n\t\t * @param {sap.ui.base.Event} oEvent the press event of the share button\r\n\t\t */\r\n\t\tonSharePress: function(oEvent) {\r\n\t\t\tvar oButton = oEvent.getSource();\r\n\r\n\t\t\t// create action sheet only once\r\n\t\t\tif (!this._actionSheet) {\r\n\t\t\t\tthis._actionSheet = sap.ui.xmlfragment(\r\n\t\t\t\t\t\"sap.ui.demo.masterdetail.view.ActionSheet\",\r\n\t\t\t\t\tthis\r\n\t\t\t\t);\r\n\t\t\t\tthis.getView().addDependent(this._actionSheet);\r\n\t\t\t\t// forward compact/cozy style into dialog\r\n\t\t\t\tjQuery.sap.syncStyleClass(this.getView().getController().getOwnerComponent().getContentDensityClass(), this.getView(), this._actionSheet);\r\n\t\t\t}\r\n\t\t\tthis._actionSheet.openBy(oButton);\r\n\t\t},\r\n\r\n\t\tatualizaTabela: function(oEvent) {\r\n\t\t\tvar IdSolicitacao = this.getView().byId(\"IdIdSolicitacao\").getValue();\r\n\r\n\t\t\tif (IdSolicitacao) {\r\n\t\t\t\toEvent.getParameter(\"bindingParams\").filters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"Idsolicitacao\",\r\n\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\tvalue1: IdSolicitacao\r\n\t\t\t\t}));\r\n\r\n\t\t\t\toEvent.getParameter(\"bindingParams\").filters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"Vencedor\",\r\n\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\tvalue1: \"X\"\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tatualizaTabela2: function(oEvent) {\r\n\t\t\tvar IdSolicitacao = this.getView().byId(\"IdIdSolicitacao\").getValue();\r\n\r\n\t\t\tif (IdSolicitacao) {\r\n\t\t\t\toEvent.getParameter(\"bindingParams\").filters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"Idsolicitacao\",\r\n\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\tvalue1: IdSolicitacao\r\n\t\t\t\t}));\r\n\r\n\t\t\t\toEvent.getParameter(\"bindingParams\").filters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"Vencedor\",\r\n\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\tvalue1: \"X\"\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tatualizaTabela3: function(oEvent) {\r\n\t\t\tvar IdSolicitacao = this.getView().byId(\"IdIdSolicitacao\").getValue();\r\n\r\n\t\t\tif (IdSolicitacao) {\r\n\t\t\t\toEvent.getParameter(\"bindingParams\").filters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"Idsolicitacao\",\r\n\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\tvalue1: IdSolicitacao\r\n\t\t\t\t}));\r\n\t\t\t\t\r\n\t\t\t\toEvent.getParameter(\"bindingParams\").filters.push(new sap.ui.model.Filter({\r\n\t\t\t\t\tpath: \"Vencedor\",\r\n\t\t\t\t\toperator: \"EQ\",\r\n\t\t\t\t\tvalue1: \"Y\"\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonSelectFilter: function() {\r\n\t\t\tvar smartTable = this.getView().byId(\"smartTable\");\r\n\t\t\tsmartTable.rebindTable(\"e\");\r\n\r\n\t\t\tvar smartTable2 = this.getView().byId(\"smartTable2\");\r\n\t\t\tsmartTable2.rebindTable(\"e\");\r\n\r\n\t\t\tvar smartTable3 = this.getView().byId(\"smartTable3\");\r\n\t\t\tsmartTable3.rebindTable(\"e\");\r\n\t\t}\r\n\r\n\t});\r\n\r\n});",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/App.controller.js": "sap.ui.define([\r\n\t\t\"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/controller/BaseController\",\r\n\t\t\"sap/ui/model/json/JSONModel\"\r\n\t], function (BaseController, JSONModel) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.extend(\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.App\", {\r\n\r\n\t\t\tonInit : function () {\r\n\t\t\t\tvar oViewModel,\r\n\t\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\r\n\t\t\t\toViewModel = new JSONModel({\r\n\t\t\t\t\tbusy : true,\r\n\t\t\t\t\tdelay : 0,\r\n\t\t\t\t\tlayout : \"OneColumn\",\r\n\t\t\t\t\tpreviousLayout : \"\",\r\n\t\t\t\t\tactionButtonsInfo : {\r\n\t\t\t\t\t\tmidColumn : {\r\n\t\t\t\t\t\t\tfullScreen : false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// since then() has no \"reject\"-path attach to the MetadataFailed-Event to disable the busy indicator in case of an error\r\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(fnSetAppNotBusy);\r\n\t\t\t\tthis.getOwnerComponent().getModel().attachMetadataFailed(fnSetAppNotBusy);\r\n\r\n\t\t\t\t// apply content density mode to root view\r\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n);",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/view/App.view.xml": "<mvc:View\r\n\tcontrollerName=\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.App\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\tdisplayBlock=\"true\"\r\n\txmlns=\"sap.f\"\r\n\txmlns:m=\"sap.m\"\r\n\theight=\"100%\">\r\n\t<m:App\r\n\t\tid=\"app\"\r\n\t\tbusy=\"{appView>/busy}\"\r\n\t\tbusyIndicatorDelay=\"{appView>/delay}\">\r\n\t\t<FlexibleColumnLayout\r\n\t\t\tid=\"layout\"\r\n\t\t\tlayout=\"{appView>/layout}\"\r\n\t\t\tbackgroundDesign=\"Translucent\">\r\n\t\t</FlexibleColumnLayout>\r\n\t</m:App>\r\n</mvc:View>",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/view/Master.view.xml": "<mvc:View controllerName=\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.Master\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\"\n\txmlns:semantic=\"sap.f.semantic\">\n\t<semantic:SemanticPage id=\"masterPage\" preserveHeaderStateOnScroll=\"true\" toggleHeaderOnTitleClick=\"false\">\n\t\t<semantic:content>\n\t\t\t<!-- For client side filtering add this to the items attribute: parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List id=\"list\" width=\"auto\" class=\"sapFDynamicPageAlignContent\"\n\t\t\t\titems=\"{ path: '/ZET_CBMM_CF_FRETESet', filters: { path: 'Status', operator: 'EQ', value1:'MAPA'}, sorter: { path: 'IdSolicitacao', descending: false}, groupHeaderFactory: '.createGroupHeader'}\"\n\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\" noDataText=\"{masterView>/noDataText}\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\" growing=\"true\" growingScrollToLoad=\"true\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\" selectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar active=\"true\" id=\"filterBar\" visible=\"{masterView>/isFilterBarVisible}\" press=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title id=\"filterBarLabel\" text=\"{masterView>/filterBarLabel}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<OverflowToolbar>\n\t\t\t\t\t\t<SearchField id=\"searchField\" showRefreshButton=\"true\" tooltip=\"{i18n>masterSearchTooltip}\" search=\"onSearch\" width=\"auto\">\n\t\t\t\t\t\t\t<layoutData>\n\t\t\t\t\t\t\t\t<OverflowToolbarLayoutData minWidth=\"150px\" maxWidth=\"240px\" shrinkable=\"true\"/>\n\t\t\t\t\t\t\t</layoutData>\n\t\t\t\t\t\t</SearchField>\n\t\t\t\t\t\t<ToolbarSpacer/>\n\t\t\t\t\t</OverflowToolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem type=\"Navigation\" press=\"onSelectionChange\" title=\"Solicitação: {IdSolicitacao}\">\n\t\t\t\t\t\t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"Empresa: {Bukrs}\" id=\"Bukrs\" visible=\"true\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t \t<attributes>\n\t\t\t\t\t\t\t<ObjectAttribute text=\"Centro: {WerksO}\" id=\"WerksO\" visible=\"true\"/>\n\t\t\t\t\t\t</attributes>\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\t</semantic:SemanticPage>\n</mvc:View>",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition\r\n\t\txmlns=\"sap.m\"\r\n\t\txmlns:core=\"sap.ui.core\">\r\n\r\n\t<ViewSettingsDialog\r\n\t\t\tid=\"viewSettingsDialog\"\r\n\t\t\tconfirm=\"onConfirmViewSettingsDialog\">\r\n\t\t<sortItems>\r\n\t\t\t<ViewSettingsItem\r\n\t\t\t\ttext=\"{i18n>masterSort1}\"\r\n\t\t\t\tkey=\"Status\"\r\n\t\t\t\tselected=\"true\"/>\r\n\t\t\t<ViewSettingsItem\r\n\t\t\t\ttext=\"{i18n>masterSort2}\"\r\n\t\t\t\tkey=\"IdSolicitacao\"/>\r\n\t\t</sortItems>\r\n\t\t<filterItems>\r\n\t\t\t<ViewSettingsFilterItem\r\n\t\t\t\t\tid=\"filterItems\"\r\n\t\t\t\t\ttext=\"{i18n>masterFilterName}\"\r\n\t\t\t\t\tmultiSelect=\"false\">\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ViewSettingsItem\r\n\t\t\t\t\t\t\tid=\"viewFilter1\"\r\n\t\t\t\t\t\t\ttext=\"{i18n>masterFilter1}\"\r\n\t\t\t\t\t\t\tkey=\"Filter1\"/>\r\n\t\t\t\t\t<ViewSettingsItem\r\n\t\t\t\t\t\t\tid=\"viewFilter2\"\r\n\t\t\t\t\t\t\ttext=\"{i18n>masterFilter2}\"\r\n\t\t\t\t\t\t\tkey=\"Filter2\"/>\r\n\t\t\t\t</items>\r\n\t\t\t</ViewSettingsFilterItem>\r\n\t\t</filterItems>\r\n\t\t<groupItems>\r\n\t\t\t<ViewSettingsItem\r\n\t\t\t\ttext=\"{i18n>masterGroup1}\"\r\n\t\t\t\tkey=\"IdSolicitacao\"/>\r\n\t\t</groupItems>\r\n\t</ViewSettingsDialog>\r\n</core:FragmentDefinition>",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/view/NotFound.view.xml": "<mvc:View\r\n\tcontrollerName=\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.NotFound\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<MessagePage\r\n\t\tid=\"page\"\r\n\t\ttitle=\"{i18n>notFoundTitle}\"\r\n\t\ttext=\"{i18n>notFoundText}\"\r\n\t\ticon=\"sap-icon://document\"\r\n>\r\n\t</MessagePage>\r\n\r\n</mvc:View>",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/view/DetailObjectNotFound.view.xml": "<mvc:View\r\n\tcontrollerName=\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.BaseController\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<MessagePage\r\n\t\tid=\"page\"\r\n\t\ttitle=\"{i18n>detailTitle}\"\r\n\t\ttext=\"{i18n>noObjectFoundText}\"\r\n\t\ticon=\"sap-icon://product\"\r\n\t\tdescription=\"\"\r\n>\r\n\t</MessagePage>\r\n\r\n</mvc:View>",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/view/Detail.view.xml": "<mvc:View xmlns:core=\"sap.ui.core\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns=\"sap.m\" xmlns:html=\"http://www.w3.org/1999/xhtml\" xmlns:m=\"sap.m\"\n\txmlns:smartFilterBar=\"sap.ui.comp.smartfilterbar\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" xmlns:smartTable=\"sap.ui.comp.smarttable\"\n\txmlns:table=\"sap.ui.table\" xmlns:f=\"sap.ui.layout.form\" xmlns:l=\"controls\" xmlns:semantic=\"sap.f.semantic\"\n\txmlns:app=\"http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1\"\n\tcontrollerName=\"ZCBMM_MAPACONC1.ZCBMM_MAPACONC1.controller.Detail\" width=\"100%\" height=\"100%\">\n\t<semantic:SemanticPage id=\"detailPage\" busy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\t\t<semantic:titleHeading>\n\t\t\t<Title text=\"Relatório de Aprovação - Mapa de concorrêcia\"/>\n\t\t</semantic:titleHeading>\n\t\t<semantic:headerContent>\n\t\t\t<ObjectAttribute text=\"Solicitação: {IdSolicitacao}\"/>\n\t\t\t<ObjectAttribute text=\"Centro: {WerksO}\"/>\n\t\t</semantic:headerContent>\n\t\t<semantic:content>\n\t\t\t<IconTabBar id=\"iconTabBar\" class=\"sapUiResponsiveContentPadding\" selectedKey=\"Tab\" select=\"onSelectFilter\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter key=\"0\" id=\"TabFilterResumo\" text=\"Resumo\" icon=\"sap-icon://compare\" visible=\"true\">\n\t\t\t\t\t\t<Input value=\"{IdSolicitacao}\" id=\"IdIdSolicitacao\" editable=\"false\" visible=\"false\"/>\n\t\t\t\t\t\t<Input value=\"{WerksO}\" id=\"IdWerksO\" editable=\"false\" visible=\"false\"/>\n\t\t\t\t\t\t<smartTable:SmartTable id=\"smartTable\" entitySet=\"ZET_CBMM_CF_VEICONDSet\" useOnlyOneSolidToolbar=\"true\" useExportToExcel=\"false\"\n\t\t\t\t\t\t\tuseVariantManagement=\"false\" useTablePersonalisation=\"false\" tableType=\"ResponsiveTable\" showRowCount=\"true\" beforeExport=\"VerificaExcel\"\n\t\t\t\t\t\t\tinitiallyVisibleFields=\"IntDescr,Desctransp,Tpveiculo,VlrNegoc,Vigencia,Volume,DataBase,PrazoPag,Incoterm\"\n\t\t\t\t\t\t\tshowFullScreenButton=\"false\" enableAutoBinding=\"true\" beforeRebindTable=\"atualizaTabela\" class=\"sapUiResponsiveContentPadding\"\n\t\t\t\t\t\t\tpersistencyKey=\"SmartTableRefApp_Explored\" app:useSmartField=\"true\">\n\t\t\t\t\t\t\t<smartTable:layoutData>\n\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\" baseSize=\"0%\"/>\n\t\t\t\t\t\t\t</smartTable:layoutData>\n\t\t\t\t\t\t</smartTable:SmartTable>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter key=\"0\" id=\"TabFilterResultado\" text=\"Resultado\" icon=\"sap-icon://compare-2\" visible=\"true\">\n\t\t\t\t\t\t<smartTable:SmartTable id=\"smartTable2\" entitySet=\"ZET_CBMM_CF_VEICONDSet\" useOnlyOneSolidToolbar=\"true\" useExportToExcel=\"false\"\n\t\t\t\t\t\t\tuseVariantManagement=\"false\" useTablePersonalisation=\"false\" tableType=\"ResponsiveTable\" showRowCount=\"true\" beforeExport=\"VerificaExcel\"\n\t\t\t\t\t\t\tinitiallyVisibleFields=\"IntDescr,Tpveiculo,VlrNegoc,FretePedag,OrcBaseline,Performance,VarPrecos,Saving,Orcamento,Tco\"\n\t\t\t\t\t\t\tshowFullScreenButton=\"false\" enableAutoBinding=\"true\" beforeRebindTable=\"atualizaTabela2\" class=\"sapUiResponsiveContentPadding\"\n\t\t\t\t\t\t\tpersistencyKey=\"SmartTableRefApp_Explored\" app:useSmartField=\"true\">\n\t\t\t\t\t\t\t<smartTable:layoutData>\n\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\" baseSize=\"0%\"/>\n\t\t\t\t\t\t\t</smartTable:layoutData>\n\t\t\t\t\t\t</smartTable:SmartTable>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter key=\"0\" id=\"TabFilterMapa\" text=\"Mapa\" icon=\"sap-icon://decision\" visible=\"true\">\n\t\t\t\t\t\t<smartTable:SmartTable id=\"smartTable3\" entitySet=\"ZET_CBMM_CF_VEICONDSet\" useOnlyOneSolidToolbar=\"true\" useExportToExcel=\"false\"\n\t\t\t\t\t\t\tuseVariantManagement=\"false\" useTablePersonalisation=\"false\" tableType=\"ResponsiveTable\" showRowCount=\"true\" beforeExport=\"VerificaExcel\"\n\t\t\t\t\t\t\tinitiallyVisibleFields=\"IntDescr,Desctransp,Tpveiculo,AproTec,HabQuali,VlrNegoc,Saving,VlrProp\"\n\t\t\t\t\t\t\tshowFullScreenButton=\"false\" enableAutoBinding=\"true\" beforeRebindTable=\"atualizaTabela3\" class=\"sapUiResponsiveContentPadding\"\n\t\t\t\t\t\t\tpersistencyKey=\"SmartTableRefApp_Explored\" app:useSmartField=\"true\">\n\t\t\t\t\t\t\t<smartTable:layoutData>\n\t\t\t\t\t\t\t\t<FlexItemData growFactor=\"1\" baseSize=\"0%\"/>\n\t\t\t\t\t\t\t</smartTable:layoutData>\n\t\t\t\t\t\t</smartTable:SmartTable>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t</semantic:content>\n\t\t<semantic:titleCustomTextActions>\n\t\t\t<Button text=\"Aprovar\" icon=\"sap-icon://accept\" press=\"onAprovar\"/>\n\t\t\t<Button text=\"Reprovar\" icon=\"sap-icon://decline\" press=\"onReprov\"/>\n\t\t</semantic:titleCustomTextActions>\n\t\t<semantic:closeAction>\n\t\t\t<semantic:CloseAction id=\"closeColumn\" press=\"onCloseDetailPress\"/>\n\t\t</semantic:closeAction>\n\t\t<semantic:fullScreenAction>\n\t\t\t<semantic:FullScreenAction id=\"enterFullScreen\"\n\t\t\t\tvisible=\"{= !${device>/system/phone} &amp;&amp; !${appView>/actionButtonsInfo/midColumn/fullScreen}}\" press=\"toggleFullScreen\"/>\n\t\t</semantic:fullScreenAction>\n\t\t<semantic:exitFullScreenAction>\n\t\t\t<semantic:ExitFullScreenAction id=\"exitFullScreen\"\n\t\t\t\tvisible=\"{= !${device>/system/phone} &amp;&amp; ${appView>/actionButtonsInfo/midColumn/fullScreen}}\" press=\"toggleFullScreen\"/>\n\t\t</semantic:exitFullScreenAction>\n\t</semantic:SemanticPage>\n</mvc:View>",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/model/models.js": "sap.ui.define([\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/Device\"\n\t], function (JSONModel, Device) {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\tcreateDeviceModel : function () {\n\t\t\t\tvar oModel = new JSONModel(Device);\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t},\n\n\t\t\tcreateFLPModel : function () {\n\t\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\n\t\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\n\t\t\t\t\toModel = new JSONModel({\n\t\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\n\t\t\t\t\t});\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/model/formatter.js": "sap.ui.define([\n\t], function () {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Rounds the currency value to 2 digits\n\t\t\t *\n\t\t\t * @public\n\t\t\t * @param {string} sValue value to be formatted\n\t\t\t * @returns {string} formatted currency value with 2 digits\n\t\t\t */\n\t\t\tcurrencyValue : function (sValue) {\n\t\t\t\tif (!sValue) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/localService/mockserver.js": "sap.ui.define([\r\n\t\t\"sap/ui/core/util/MockServer\"\r\n\t], function (MockServer) {\r\n\t\t\"use strict\";\r\n\r\n\t\tvar oMockServer,\r\n\t\t\t_sAppModulePath = \"ZCBMM_MAPACONC1/ZCBMM_MAPACONC1/\",\r\n\t\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\t\treturn {\r\n\r\n\t\t\t/**\r\n\t\t\t * Initializes the mock server.\r\n\t\t\t * You can configure the delay with the URL parameter \"serverDelay\".\r\n\t\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\r\n\t\t\tinit : function () {\r\n\t\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\t\tsEntity = \"ZET_CBMM_CF_FRETESet\",\r\n\t\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\r\n\t\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\r\n\r\n\t\t\t\toMockServer = new MockServer({\r\n\t\t\t\t\trootUri : sMockServerUrl\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// configure mock server with a delay of 1s\r\n\t\t\t\tMockServer.config({\r\n\t\t\t\t\tautoRespond : true,\r\n\t\t\t\t\tautoRespondAfter : (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Simulate a manual back-end call\r\n\t\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\t\tsMockdataBaseUrl : sJsonFilesUrl,\r\n\t\t\t\t\tbGenerateMissingMockData : true\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\t\taRequest.response = function(oXhr){\r\n\t\t\t\t\t\t\toXhr.respond(iErrCode, {\"Content-Type\": \"text/plain;charset=utf-8\"}, sMessage);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t// handling the metadata error test\r\n\t\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\r\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Handling request errors\r\n\t\t\t\tif (sErrorParam) {\r\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\r\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\toMockServer.setRequests(aRequests);\r\n\t\t\t\toMockServer.start();\r\n\r\n\t\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t\t */\r\n\t\t\tgetMockServer : function () {\r\n\t\t\t\treturn oMockServer;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t}\r\n);"
	}
});