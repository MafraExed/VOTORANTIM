"use strict";function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_unsupportedIterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,t){if(!r)return;if(typeof r==="string")return _arrayLikeToArray(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);if(e==="Object"&&r.constructor)e=r.constructor.name;if(e==="Map"||e==="Set")return Array.from(r);if(e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return _arrayLikeToArray(r,t)}function _iterableToArray(r){if(typeof Symbol!=="undefined"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}function _arrayLikeToArray(r,t){if(t==null||t>r.length)t=r.length;for(var e=0,n=new Array(t);e<t;e++){n[e]=r[e]}return n}sap.ui.define([],function(){return function(r){return r.reduce(function(r,t){return r.then(function(r){var e=function t(e){return[].concat(_toConsumableArray(r),[e])};if(t.then){return t.then(e)}return t().then(e)})},Promise.resolve([]))}});