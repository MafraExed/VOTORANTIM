jQuery.sap.registerPreloadedModules({version:"2.0",name:"ClocoEmailSetup/Component-preload",modules:{"ClocoEmailSetup/Component.js":'sap.ui.define([\r\n\t"sap/ui/core/UIComponent",\r\n\t"sap/ui/Device",\r\n\t"ClocoEmailSetup/model/models"\r\n], function(UIComponent, Device, models) {\r\n\t"use strict";\r\n\r\n\treturn UIComponent.extend("ClocoEmailSetup.Component", {\r\n\r\n\t\tmetadata: {\r\n\t\t\tmanifest: "json"\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t * @public\r\n\t\t * @override\r\n\t\t */\r\n\t\tinit: function() {\r\n\t\t\t// call the base component\'s init function\r\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t// set the device model\r\n\t\t\tthis.setModel(models.createDeviceModel(), "device");\r\n\t\t\t\r\n\t\t\tif(sap.ui.Device.system.phone)\r\n\t\t\t\tthis.getRouter()._oRoutes.monitor._oConfig.target[0] = "MonitorMobile";\r\n\t\t\t\r\n\t\t\t// We need to add the below one line code to initialize and enable the hash (#) based routing\r\n\t\t\t// enable hash based routing\r\n\t\t\tthis.getRouter().initialize();\r\n\t\t}\r\n\t});\r\n\r\n});',"ClocoEmailSetup/controller/App.controller.js":'sap.ui.define([\r\n\t"ClocoEmailSetup/controller/BaseController"\r\n], function(BaseController) {\r\n\t"use strict";\r\n\r\n\treturn BaseController.extend("ClocoEmailSetup.controller.App", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf FechamentoContabil.view.App\r\n\t\t */\r\n\t\t//\tonInit: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller\'s View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf FechamentoContabil.view.App\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf FechamentoContabil.view.App\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf FechamentoContabil.view.App\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});',"ClocoEmailSetup/controller/BaseController.js":'/*global history */\r\nsap.ui.define([\r\n\t"sap/ui/core/mvc/Controller",\r\n\t"sap/ui/core/routing/History",\r\n\t\'sap/m/MessageBox\'\r\n], function (Controller, History, MessageBox) {\r\n\t"use strict";\r\n\r\n\tvar key = {\r\n\t\tProfile: \'\',\r\n\t\tInstance: \'\',\r\n\t\tNoAtual: \'\'\r\n\t};\r\n\r\n\treturn Controller.extend("FechamentoContabil.controller.BaseController", {\r\n\t\t/**\r\n\t\t * Convenience method for accessing the router in every controller of the application.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t */\r\n\t\tgetRouter: function () {\r\n\t\t\treturn this.getOwnerComponent().getRouter();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the view model by name in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.model.Model} the model instance\r\n\t\t */\r\n\t\tgetModel: function (sName) {\r\n\t\t\treturn this.getView().getModel(sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for setting the view model in every controller of the application.\r\n\t\t * @public\r\n\t\t * @param {sap.ui.model.Model} oModel the model instance\r\n\t\t * @param {string} sName the model name\r\n\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t */\r\n\t\tsetModel: function (oModel, sName) {\r\n\t\t\treturn this.getView().setModel(oModel, sName);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Convenience method for getting the resource bundle.\r\n\t\t * @public\r\n\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t */\r\n\t\tgetResourceBundle: function () {\r\n\t\t\treturn this.getOwnerComponent().getModel("i18n").getResourceBundle();\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Event handler for navigating back.\r\n\t\t * It there is a history entry or an previous app-to-app navigation we go one step back in the browser history\r\n\t\t * If not, it will replace the current entry of the browser history with the master route.\r\n\t\t * @public\r\n\t\t */\r\n\t\tonNavBack: function () {\r\n\r\n\t\t},\r\n\r\n\t\tattachPatternMatched: function (route) {\r\n\t\t\tvar oRouter = sap.ui.core.UIComponent.getRouterFor(this);\r\n\t\t\toRouter.getRoute(route).attachPatternMatched(this._onObjectMatched, this);\r\n\t\t},\r\n\r\n\t\t_onObjectMatched: function (oEvent) {\r\n\t\t\tvar parameters = oEvent.getParameters();\r\n\r\n\t\t\tif (parameters.name === \'Main\') {\r\n\t\t\t\tthis.getDadosECC(\'getModelos\');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetDadosECC: function (parametro, notBusy) {\r\n\r\n\t\t\tvar oModel = this.getOwnerComponent().getModel();\r\n\t\t\tvar oDataURL;\r\n\t\t\tvar expand = null;\r\n\t\t\tvar that = this;\r\n\r\n\t\t\tif (!notBusy) {\r\n\t\t\t\tthis.getView().setBusy(true);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.byId("idInputPeriodo").getSelectedItem())\r\n\t\t\t\tkey.Instance = this.byId("idInputPeriodo").getSelectedItem().getText();\r\n\t\t\tif (key.Instance === \'*\' || key.Instance === "")\r\n\t\t\t\tkey.Instance = \'0\';\r\n\r\n\t\t\t//  dadosIniciais -> qdo o model está vazio, faz a busca inicial no SAP\t\r\n\t\t\tif (parametro === \'getModelos\') {\r\n\t\t\t\toDataURL = "/Planos";\r\n\t\t\t}\r\n\t\t\tif (parametro === \'getDetalheModelo\') {\r\n\t\t\t\toDataURL = "/setupEmails(Profile=\'" + key.Profile.trim() + "\',Instance=\'0\',Item=\'0\')";\r\n\t\t\t\texpand = "setupMailToHierarquiaPasta";\r\n\t\t\t}\r\n\t\t\tif (parametro === \'getRegra\') {\r\n\t\t\t\toDataURL = "/setupEmails(Profile=\'" + key.Profile.trim() + "\',Instance=\'" + key.Instance.trim() + "\',Item=\'" + key.Item.trim() +\r\n\t\t\t\t\t"\')";\r\n\t\t\t}\r\n\t\t\t// if (parametro === \'getDetalheModelo\') {\r\n\t\t\t// \toDataURL = "/DadosIniciais(Profile=\'" + key.Profile.trim() + "\',Instance=\'0\',NoAtual=\'0\')";\r\n\t\t\t// \texpand = "ToPlanos,ToPlanoSelecionado,ToPeriodos,ToHierarquiaPastas,ToHierarquiaGantt";\r\n\t\t\t// }\r\n\t\t\t// if (parametro === \'getRegra\') {\r\n\t\t\t// \toDataURL = "/DadosIniciais(Profile=\'" + key.Profile.trim() + "\',Instance=\'" + key.Instance.trim() + "\',NoAtual=\'" + key.Item.trim() + "\')";\r\n\t\t\t// }\r\n\t\t\toModel.removeData();\r\n\t\t\tif (expand !== null)\r\n\t\t\t\toModel.read(oDataURL, {\r\n\t\t\t\t\turlParameters: {\r\n\t\t\t\t\t\t"$expand": expand\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmethod: "GET",\r\n\t\t\t\t\tsuccess: function (data) {\r\n\t\t\t\t\t\tthat.respostaECC(that, parametro, data);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function (error) {\r\n\t\t\t\t\t\tsap.m.MessageToast.show("Erro na conexão com o ECC");\r\n\t\t\t\t\t\tthat.getView().setBusy(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\telse\r\n\t\t\t\toModel.read(oDataURL, {\r\n\t\t\t\t\tmethod: "GET",\r\n\t\t\t\t\tsuccess: function (data) {\r\n\t\t\t\t\t\tthat.respostaECC(that, parametro, data);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function (error) {\r\n\t\t\t\t\t\tsap.m.MessageToast.show("Erro na conexão com o ECC");\r\n\t\t\t\t\t\tthat.getView().setBusy(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t},\r\n\r\n\t\trespostaECC: function (that, parameter, data) {\r\n\r\n\t\t\tswitch (parameter) {\r\n\t\t\tcase "getModelos":\r\n\t\t\t\tthat.inicializaModelos(that, data);\r\n\t\t\t\tbreak;\r\n\t\t\tcase "getDetalheModelo":\r\n\t\t\t\tthat.setDelatheModelo(that, data);\r\n\t\t\t\tbreak;\r\n\t\t\tcase "getRegra":\r\n\t\t\t\tthat.setValueRegras(that, data);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthat.getView().setBusy(false);\r\n\t\t},\r\n\r\n\t\tsetDadosECC: function (parametro, data) {\r\n\r\n\t\t\tvar oModel = this.getOwnerComponent().getModel();\r\n\t\t\tvar oRequestData = {};\r\n\t\t\tvar oDataURL;\r\n\t\t\tvar that = this;\r\n\t\t\tvar message;\r\n\t\t\tvar contemRegra;\r\n\t\t\tvar modific = false;\r\n\t\t\tvar messagePopup = false;\r\n\r\n\t\t\tif (this.byId("idSwitchLembrete").getState() || this.byId("idSwitchNI").getState() ||\r\n\t\t\t\tthis.byId("idSwitchNE").getState() || this.byId("idSwitchDI").getState())\r\n\t\t\t\tmodific = true;\r\n\r\n\t\t\tif (!modific && parametro !== "excluirRegra") {\r\n\t\t\t\tMessageBox.alert("Nenhuma regra adicionada a tarefa", \'\', "Error");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tkey.Profile = this.byId("idInputModelo").getSelectedItem().getText();\r\n\t\t\tif (this.byId("idCheckboxModelo").getSelected())\r\n\t\t\t\tkey.Instance = \'0\';\r\n\t\t\telse\r\n\t\t\t\tkey.Instance = this.byId("idInputPeriodo").getSelectedItem().getText();\r\n\r\n\t\t\tkey.NoAtual = \'*\';\r\n\r\n\t\t\toRequestData = this.getTreeData(parametro);\r\n\r\n\t\t\tvar mParameters = {\r\n\t\t\t\tgroupId: "regras",\r\n\t\t\t\tsuccess: function (odata, resp) {\r\n\t\t\t\t\tif (!messagePopup) {\r\n\t\t\t\t\t\tmessagePopup = true;\r\n\t\t\t\t\t\tif (parametro === "gravarRegra")\r\n\t\t\t\t\t\t\tMessageBox.alert("Regras salvas com sucesso", \'\', "Sucesso");\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tMessageBox.alert("Regras excluídas com sucesso", \'\', "Sucesso");\r\n\t\t\t\t\t\tthat.byId("navCon").to(that.byId("p1"), "show");\r\n\t\t\t\t\t\tthat.updateModelRegra(contemRegra);\r\n\t\t\t\t\t\tthat.byId("Tree").removeSelections();\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror: function (odata, resp) {\r\n\t\t\t\t\tMessageBox.alert("Erro de Conexão com ECC", \'\', "Erro");\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (parametro === "gravarRegra") {\r\n\t\t\t\tcontemRegra = "X";\r\n\t\t\t\tmessage = "Regra gravada com sucesso";\r\n\t\t\t\toDataURL = "/setupEmails(Profile=\'" + key.Profile.trim() + "\',Instance=\'" + key.Instance.trim() + "\',Item=\'" + key.NoAtual.trim() +\r\n\t\t\t\t\t"\')";\r\n\t\t\t}\r\n\r\n\t\t\tif (parametro === "excluirRegra") {\r\n\t\t\t\tcontemRegra = "";\r\n\t\t\t\tmessage = "Regra excluída com sucesso";\r\n\t\t\t\toDataURL = "/setupEmails(Profile=\'" + key.Profile.trim() + "\',Instance=\'" + key.Instance.trim() + "\',Item=\'" + key.NoAtual.trim() +\r\n\t\t\t\t\t"\')";\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < oRequestData.length; i++) {\r\n\t\t\t\toModel.update(oDataURL, oRequestData[i], mParameters);\r\n\t\t\t}\r\n\r\n\t\t\toModel.setUseBatch(true);\r\n\t\t\toModel.setDeferredGroups(["regras"]);\r\n\t\t\toModel.submitChanges(mParameters);\r\n\r\n\t\t},\r\n\r\n\t\tupdateModelRegra: function (value) {\r\n\t\t\tvar treeSelectedItems = this.byId("Tree").getSelectedItems();\r\n\t\t\tvar customData;\r\n\t\t\tvar items = [];\r\n\t\t\tvar modelTree = this.getView().getModel("HierarquiaPastas");\r\n\r\n\t\t\ttreeSelectedItems.forEach(function (item) {\r\n\t\t\t\tcustomData = item.getCustomData("key");\r\n\t\t\t\titems.push(customData[0].getValue());\r\n\t\t\t});\r\n\r\n\t\t\tthis.setResultsModel(modelTree.oData, "NodeID", items, "contemRegra", value);\r\n\r\n\t\t\tmodelTree.refresh(true);\r\n\r\n\t\t},\r\n\r\n\t\tsetResultsModel: function (results, keyname, keyvalues, fieldname, value) {\r\n\t\t\tvar done = null;\r\n\t\t\tvar that = this;\r\n\r\n\t\t\tresults.forEach(function (item) {\r\n\t\t\t\tif (keyvalues.includes(item[keyname]) || item[keyname] === key.Item) {\r\n\t\t\t\t\titem[fieldname] = value;\r\n\t\t\t\t\tdone = "ok";\r\n\t\t\t\t} else if (item.children !== undefined) {\r\n\t\t\t\t\tdone = that.setResultsModel(item.children, keyname, keyvalues, fieldname, value);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tinicializaModelos: function (that, data) {\r\n\r\n\t\t\tif (data.results.length > 0) {\r\n\t\t\t\tthat.updateModel(that, "Planos", data.results);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tsetDelatheModelo: function (that, data) {\r\n\t\t\tvar nodesPastas = that.montaTree(data.setupMailToHierarquiaPasta.results);\r\n\t\t\tthat.updateModel(that, "HierarquiaPastas", nodesPastas);\r\n\t\t\tthis.byId("Tree").expandToLevel(9);\r\n\r\n\t\t},\r\n\r\n\t\tupdateModel: function (that, name, data) {\r\n\t\t\tvar oModel = new sap.ui.model.json.JSONModel(data);\r\n\t\t\tthat.getView().setModel(oModel, name);\r\n\t\t},\r\n\r\n\t\tonNovoModelo: function (oEvent) {\r\n\r\n\t\t\tthis.byId("Tree").setVisible(true);\r\n\t\t\tthis.byId("Tree").removeSelections();\r\n\r\n\t\t\tif (oEvent.getSource().getSelectedItem().getText() === this.getView().getModel("Planos").oData[0].Profile)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (oEvent.getSource().getSelectedItem().getText() === "")\r\n\t\t\t\treturn;\r\n\r\n\t\t\tkey.Profile = oEvent.getSource().getSelectedItem().getText();\r\n\t\t\tkey.Instance = \'\';\r\n\t\t\tkey.NoAtual = \'\';\r\n\r\n\t\t\tthis.byId("navCon").to(this.byId("p1"), "show");\r\n\t\t\tthis.getDadosECC(\'getDetalheModelo\');\r\n\t\t},\r\n\r\n\t\tmontaTree: function (nodesIn) {\r\n\r\n\t\t\tvar nodes = []; //\'deep\' object structure\r\n\t\t\tvar nodeMap = {}; //\'map\', each node is an attribute\r\n\t\t\t\r\n\t\t\t// nodesIn.sort((a,b) => (a.NodeID > b.NodeID) ? 1 : ((b.NodeID > a.NodeID) ? -1 : 0)); \r\n\r\n\t\t\tif (nodesIn) {\r\n\r\n\t\t\t\tvar nodeOut;\r\n\t\t\t\tvar parentId;\r\n\r\n\t\t\t\tfor (var i = 0; i < nodesIn.length; i++) {\r\n\t\t\t\t\tvar nodeIn = nodesIn[i];\r\n\t\t\t\t\tnodeOut = {\r\n\t\t\t\t\t\tNodeID: nodeIn.NodeID,\r\n\t\t\t\t\t\tDescription: nodeIn.Description,\r\n\t\t\t\t\t\tItem: nodeIn.Item,\r\n\t\t\t\t\t\tcontemRegra: nodeIn.contemRegra,\r\n\t\t\t\t\t\tselect: false,\r\n\t\t\t\t\t\tchildren: []\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tparentId = nodeIn.ParentNodeID;\r\n\r\n\t\t\t\t\tif (parentId !== \'null\') {\r\n\t\t\t\t\t\tvar parent = nodeMap[nodeIn.ParentNodeID];\r\n\r\n\t\t\t\t\t\tif (parent) {\r\n\t\t\t\t\t\t\tparent.children.push(nodeOut);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//there is no parent, must be top level\r\n\t\t\t\t\t\tnodes.push(nodeOut);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//add the node to the node map, which is a simple 1-level list of all nodes\r\n\t\t\t\t\tnodeMap[nodeOut.NodeID] = nodeOut;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn nodes;\r\n\t\t},\r\n\r\n\t\tonPressTree: function (oEvent) {\r\n\r\n\t\t\toEvent.getSource().setSelected(true);\r\n\r\n\t\t\tvar navCon = this.byId("navCon");\r\n\r\n\t\t\t//\tif(this.byId("Tree").getSelectedItems().length > 0){\r\n\t\t\tvar customData = oEvent.getSource().getCustomData("key");\r\n\t\t\tkey.Item = customData[0].getValue();\r\n\t\t\tthis.getDadosECC("getRegra");\r\n\t\t\tnavCon.to(this.byId("p2"), "show");\r\n\t\t\t//\t}\r\n\t\t\t//\telse\r\n\t\t\t//\t\tnavCon.to(this.byId("p1"),"show");\r\n\t\t},\r\n\r\n\t\tonPressGravarRegra: function (oEvent) {\r\n\t\t\tthis.setDadosECC("gravarRegra");\r\n\t\t},\r\n\r\n\t\tonPressExcluirRegra: function (oEvent) {\r\n\t\t\tvar tabBar = this.byId("idIconTabBar");\r\n\r\n\t\t\tvar idSelec = tabBar.getSelectedKey();\r\n\t\t\tvar tabFilter = this.byId(idSelec);\r\n\r\n\t\t\tvar vbox = tabFilter.getContent()[0];\r\n\r\n\t\t\tvar items = vbox.getItems();\r\n\r\n\t\t\tfor (var i = 0; i < items.length; i++) {\r\n\t\t\t\tvar value = items[i];\r\n\r\n\t\t\t\tvar hbox = value.getItems();\r\n\r\n\t\t\t\tfor (var i2 = 0; i2 < hbox.length; i2++) {\r\n\t\t\t\t\tvar value2 = hbox[i2];\r\n\t\t\t\t\tif (value2.getMetadata().getElementName("sClassName") == \'sap.m.Switch\')\r\n\t\t\t\t\t\tvalue2.setState(false);\r\n\t\t\t\t\tif (value2.getMetadata().getElementName("sClassName") == \'sap.m.TimePicker\')\r\n\t\t\t\t\t\tvalue2.setValue(\'000000\');\r\n\t\t\t\t\tif (value2.getMetadata().getElementName("sClassName") == \'sap.m.Input\')\r\n\t\t\t\t\t\tvalue2.setValue(\'\');\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis.setDadosECC("excluirRegra");\r\n\t\t},\r\n\r\n\t\tonTreeSelect: function (oEvent) {\r\n\r\n\t\t\tfunction addSelectedFlag(aNodes, bSelected) {\r\n\t\t\t\tjQuery.each(aNodes, function (iIndex, oNode) {\r\n\t\t\t\t\toNode.selected = bSelected;\r\n\t\t\t\t\tif (oNode.children) {\r\n\t\t\t\t\t\taddSelectedFlag(oNode.children, bSelected);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tvar aItems = oEvent.getParameter("listItems") || [],\r\n\t\t\t\toModel = this.getView().getModel(\'HierarquiaPastas\');\r\n\t\t\tjQuery.each(aItems, function (iIndex, oItem) {\r\n\t\t\t\tvar oNode = oItem.getBindingContext(\'HierarquiaPastas\').getObject(),\r\n\t\t\t\t\tbSelected = oItem.getSelected();\r\n\t\t\t\tif (oNode.children) {\r\n\t\t\t\t\taddSelectedFlag(oNode.children, bSelected);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\toModel.refresh();\r\n\r\n\t\t},\r\n\r\n\t\tgetTreeData: function (parametro) {\r\n\r\n\t\t\tvar items = [];\r\n\t\t\tvar treeSelectedItems = this.byId("Tree").getSelectedItems();\r\n\t\t\tvar customData;\r\n\t\t\tvar switchLembrete = null;\r\n\t\t\tvar switchNI = null;\r\n\t\t\tvar switchNE = null;\r\n\t\t\tvar switchDI = null;\r\n\t\t\tvar that = this;\r\n\t\t\tvar operacao;\r\n\r\n\t\t\tif (this.byId("idSwitchLembrete").getState())\r\n\t\t\t\tswitchLembrete = "X";\r\n\r\n\t\t\tif (this.byId("idSwitchNI").getState())\r\n\t\t\t\tswitchNI = "X";\r\n\r\n\t\t\tif (this.byId("idSwitchNE").getState())\r\n\t\t\t\tswitchNE = "X";\r\n\r\n\t\t\tif (this.byId("idSwitchDI").getState())\r\n\t\t\t\tswitchDI = "X";\r\n\r\n\t\t\tvar mountJsonData = function () {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tProfile: key.Profile,\r\n\t\t\t\t\tInstance: key.Instance,\r\n\t\t\t\t\tTipoLb: switchLembrete,\r\n\t\t\t\t\tAgend: that.byId("lembreteAgendHoras").getValue(),\r\n\t\t\t\t\tEmailLb1: that.byId("lembreteEmails").getValue(),\r\n\t\t\t\t\tAssuntoLb: that.byId("lembreteAssunto").getValue(),\r\n\t\t\t\t\tLinhaLb1: that.byId("lembreteTexto1").getValue(),\r\n\t\t\t\t\tLinhaLb2: that.byId("lembreteTexto2").getValue(),\r\n\r\n\t\t\t\t\tTipoNi: switchNI,\r\n\t\t\t\t\tQtdEmailNi: that.byId("qtdeNIEmails").getValue(),\r\n\t\t\t\t\tIntEnvioNi: that.byId("AtvdNIintervalo").getValue(),\r\n\t\t\t\t\tEmailNi1: that.byId("atvdNIEmails").getValue(),\r\n\t\t\t\t\tAssuntoNi: that.byId("atvdNIAssunto").getValue(),\r\n\t\t\t\t\tLinhaNi1: that.byId("atvdNITexto1").getValue(),\r\n\t\t\t\t\tLinhaNi2: that.byId("atvdNITexto2").getValue(),\r\n\r\n\t\t\t\t\tTipoNe: switchNE,\r\n\t\t\t\t\tQtdEmailNe: that.byId("qtdeNEEmails").getValue(),\r\n\t\t\t\t\tIntEnvioNe: that.byId("AtvdNEintervalo").getValue(),\r\n\t\t\t\t\tEmailNe1: that.byId("atvdNEEmails").getValue(),\r\n\t\t\t\t\tAssuntoNe: that.byId("atvdNEAssunto").getValue(),\r\n\t\t\t\t\tLinhaNe1: that.byId("atvdNETexto1").getValue(),\r\n\t\t\t\t\tLinhaNe2: that.byId("atvdNETexto2").getValue(),\r\n\r\n\t\t\t\t\tTipoAd: switchDI,\r\n\t\t\t\t\tEmailAd1: that.byId("atvdDIEmails").getValue(),\r\n\t\t\t\t\tAssunto: that.byId("atvdDIAssunto").getValue(),\r\n\t\t\t\t\tLinhaAd1: that.byId("atvdDITexto1").getValue(),\r\n\t\t\t\t\tLinhaAd2: that.byId("atvdDITexto2").getValue(),\r\n\r\n\t\t\t\t\tOperacao: operacao\r\n\t\t\t\t};\r\n\t\t\t};\r\n\r\n\t\t\tvar tarefa = mountJsonData();\r\n\t\t\ttarefa.Item = key.Item;\r\n\t\t\titems.push(tarefa);\r\n\r\n\t\t\ttreeSelectedItems.forEach(function (item) {\r\n\t\t\t\tvar modelData = mountJsonData();\r\n\t\t\t\tcustomData = item.getCustomData("key");\r\n\t\t\t\tif (key.Item !== customData[0].getValue()) {\r\n\t\t\t\t\tmodelData.Item = customData[0].getValue();\r\n\t\t\t\t\titems.push(modelData);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn items;\r\n\t\t},\r\n\r\n\t\tonChangeSwitchLb: function (oEvent) {\r\n\t\t\tvar controls = ["lembreteAgendHoras", "lembreteEmails", "lembreteAssunto", "lembreteTexto1", "lembreteTexto2"];\r\n\t\t\tvar that = this;\r\n\t\t\tvar condition;\r\n\r\n\t\t\tif (oEvent === undefined)\r\n\t\t\t\tcondition = this.byId("idSwitchLembrete").getState();\r\n\t\t\telse\r\n\t\t\t\tcondition = oEvent.getSource().getState();\r\n\r\n\t\t\tcontrols.forEach(function (control) {\r\n\t\t\t\tthat.byId(control).setEnabled(condition);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonChangeSwitchNI: function (oEvent) {\r\n\t\t\tvar controls = ["AtvdNIintervalo", "atvdNIEmails", "atvdNIAssunto", "atvdNITexto1", "atvdNITexto2", "qtdeNIEmails"];\r\n\t\t\tvar that = this;\r\n\t\t\tvar condition;\r\n\r\n\t\t\tif (oEvent === undefined)\r\n\t\t\t\tcondition = this.byId("idSwitchNI").getState();\r\n\t\t\telse\r\n\t\t\t\tcondition = oEvent.getSource().getState();\r\n\r\n\t\t\tcontrols.forEach(function (control) {\r\n\t\t\t\tthat.byId(control).setEnabled(condition);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonChangeSwitchNE: function (oEvent) {\r\n\t\t\tvar controls = ["AtvdNEintervalo", "atvdNEEmails", "atvdNEAssunto", "atvdNETexto1", "atvdNETexto2", "qtdeNEEmails"];\r\n\t\t\tvar that = this;\r\n\t\t\tvar condition;\r\n\r\n\t\t\tif (oEvent === undefined)\r\n\t\t\t\tcondition = this.byId("idSwitchNE").getState();\r\n\t\t\telse\r\n\t\t\t\tcondition = oEvent.getSource().getState();\r\n\r\n\t\t\tcontrols.forEach(function (control) {\r\n\t\t\t\tthat.byId(control).setEnabled(condition);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonChangeSwitchDI: function (oEvent) {\r\n\t\t\tvar controls = ["atvdDIEmails", "atvdDIAssunto", "atvdDITexto1", "atvdDITexto2"];\r\n\t\t\tvar that = this;\r\n\t\t\tvar condition;\r\n\r\n\t\t\tif (oEvent === undefined)\r\n\t\t\t\tcondition = this.byId("idSwitchDI").getState();\r\n\t\t\telse\r\n\t\t\t\tcondition = oEvent.getSource().getState();\r\n\r\n\t\t\tcontrols.forEach(function (control) {\r\n\t\t\t\tthat.byId(control).setEnabled(condition);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\tonPressHelp: function (oEvent) {\r\n\t\t\tvar tooltip = this.byId("tooltipCont").getDomRef();\r\n\t\t\tvar iconHelp = oEvent.getSource().getDomRef();\r\n\t\t\tvar rects = iconHelp.getClientRects();\r\n\t\t\tvar left = rects[0].x - 225;\r\n\t\t\ttooltip.style.left = left + "px";\r\n\t\t},\r\n\r\n\t\tsetValueRegras: function (that, data) {\r\n\r\n\t\t\tif (data.TipoLb === "X")\r\n\t\t\t\tthis.byId("idSwitchLembrete").setState(true);\r\n\t\t\telse\r\n\t\t\t\tthis.byId("idSwitchLembrete").setState(false);\r\n\r\n\t\t\tthat.byId("lembreteAgendHoras").setValue(data.Agend);\r\n\t\t\tthat.byId("lembreteEmails").setValue(data.EmailLb1);\r\n\t\t\tthat.byId("lembreteAssunto").setValue(data.AssuntoLb);\r\n\t\t\tthat.byId("lembreteTexto1").setValue(data.LinhaLb1);\r\n\t\t\tthat.byId("lembreteTexto2").setValue(data.LinhaLb2);\r\n\r\n\t\t\tif (data.TipoNi === "X")\r\n\t\t\t\tthis.byId("idSwitchNI").setState(true);\r\n\t\t\telse\r\n\t\t\t\tthis.byId("idSwitchNI").setState(false);\r\n\r\n\t\t\tthat.byId("qtdeNIEmails").setValue(data.QtdEmailNi);\r\n\t\t\tthat.byId("AtvdNIintervalo").setValue(data.IntEnvioNi);\r\n\t\t\tthat.byId("atvdNIEmails").setValue(data.EmailNi1);\r\n\t\t\tthat.byId("atvdNIAssunto").setValue(data.AssuntoNi);\r\n\t\t\tthat.byId("atvdNITexto1").setValue(data.LinhaNi1);\r\n\t\t\tthat.byId("atvdNITexto2").setValue(data.LinhaNi2);\r\n\r\n\t\t\tif (data.TipoNe === "X")\r\n\t\t\t\tthis.byId("idSwitchNE").setState(true);\r\n\t\t\telse\r\n\t\t\t\tthis.byId("idSwitchNE").setState(false);\r\n\r\n\t\t\tthat.byId("qtdeNEEmails").setValue(data.QtdEmailNe);\r\n\t\t\tthat.byId("AtvdNEintervalo").setValue(data.IntEnvioNe);\r\n\t\t\tthat.byId("atvdNEEmails").setValue(data.EmailNe1);\r\n\t\t\tthat.byId("atvdNEAssunto").setValue(data.AssuntoNe);\r\n\t\t\tthat.byId("atvdNETexto1").setValue(data.LinhaNe1);\r\n\t\t\tthat.byId("atvdNETexto2").setValue(data.LinhaNe2);\r\n\r\n\t\t\tif (data.TipoAd === "X")\r\n\t\t\t\tthis.byId("idSwitchDI").setState(true);\r\n\t\t\telse\r\n\t\t\t\tthis.byId("idSwitchDI").setState(false);\r\n\r\n\t\t\tthat.byId("atvdDIEmails").setValue(data.EmailAd1);\r\n\t\t\tthat.byId("atvdDIAssunto").setValue(data.Assunto);\r\n\t\t\tthat.byId("atvdDITexto1").setValue(data.LinhaAd1);\r\n\t\t\tthat.byId("atvdDITexto2").setValue(data.LinhaAd2);\r\n\r\n\t\t\tthat.onChangeSwitchLb();\r\n\t\t\tthat.onChangeSwitchNI();\r\n\t\t\tthat.onChangeSwitchNE();\r\n\t\t\tthat.onChangeSwitchDI();\r\n\r\n\t\t}\r\n\r\n\t});\r\n\r\n});',"ClocoEmailSetup/controller/Main.controller.js":'sap.ui.define([\r\n\t"ClocoEmailSetup/controller/BaseController", \r\n\t"sap/ui/model/json/JSONModel",\r\n\t"sap/ui/core/util/Export", \r\n\t"sap/ui/core/util/ExportTypeCSV"\r\n\t\r\n], function (BaseController,JSONModel,Export,ExportTypeCSV) {\r\n\t"use strict";\r\n\r\n\r\n\treturn BaseController.extend("ClocoEmailSetup.controller.Main", {\r\n\r\n\t\t/**\r\n\t\t * Called when a controller is instantiated and its View controls (if available) are already created.\r\n\t\t * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.\r\n\t\t * @memberOf FechamentoContabil.view.App\r\n\t\t */\r\n\t\t\tonInit: function() {\r\n\t\t\t\r\n\t\t\t\tthis.attachPatternMatched(\'Main\');\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t/**\r\n\t\t * Similar to onAfterRendering, but this hook is invoked before the controller\'s View is re-rendered\r\n\t\t * (NOT before the first rendering! onInit() is used for that one!).\r\n\t\t * @memberOf FechamentoContabil.view.App\r\n\t\t */\r\n\t\t//\tonBeforeRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.\r\n\t\t * This hook is the same one that SAPUI5 controls get after being rendered.\r\n\t\t * @memberOf FechamentoContabil.view.App\r\n\t\t */\r\n\t\t//\tonAfterRendering: function() {\r\n\t\t//\r\n\t\t//\t},\r\n\r\n\t\t/**\r\n\t\t * Called when the Controller is destroyed. Use this one to free resources and finalize activities.\r\n\t\t * @memberOf FechamentoContabil.view.App\r\n\t\t */\r\n\t\t//\tonExit: function() {\r\n\t\t//\r\n\t\t//\t}\r\n\r\n\t});\r\n\r\n});',"ClocoEmailSetup/Gruntfile.js":'module.exports = function (grunt) {\r\n            "use strict";\r\n            grunt.loadNpmTasks("@sap/grunt-sapui5-bestpractice-build");\r\n            grunt.config.merge({ compatVersion: "1.38" });\r\n            grunt.registerTask("default", [\r\n                        "clean",\r\n                        "build"\r\n            ]);\r\n            grunt.loadNpmTasks("@sap/grunt-sapui5-bestpractice-test");\r\n            grunt.registerTask("unit_and_integration_tests", ["test"]);\r\n            grunt.config.merge({\r\n                        coverage_threshold: {\r\n                                    statements: 0,\r\n                                    branches: 100,\r\n                                    functions: 0,\r\n                                    lines: 0\r\n                        }\r\n            });\r\n};',"ClocoEmailSetup/model/models.js":'sap.ui.define([\r\n\t"sap/ui/model/json/JSONModel",\r\n\t"sap/ui/Device"\r\n], function(JSONModel, Device) {\r\n\t"use strict";\r\n\r\n\treturn {\r\n\r\n\t\tcreateDeviceModel: function() {\r\n\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\toModel.setDefaultBindingMode("OneWay");\r\n\t\t\treturn oModel;\r\n\t\t}\r\n\r\n\t};\r\n});',"ClocoEmailSetup/serviceBinding.js":'function initModel() {\r\n\tvar sUrl = "/sap/opu/odata/sap/ZGWGLFI_CLOCO_SRV/";\r\n\tvar oModel = new sap.ui.model.odata.ODataModel(sUrl, true);\r\n\tsap.ui.getCore().setModel(oModel);\r\n}',"ClocoEmailSetup/view/App.view.xml":'<mvc:View xmlns:core="sap.ui.core" xmlns:mvc="sap.ui.core.mvc" xmlns:m="sap.m" controllerName="ClocoEmailSetup.controller.App"\r\n\txmlns:html="http://www.w3.org/1999/xhtml">\r\n\t<m:App id="app"></m:App>\r\n\t\r\n</mvc:View>\r\n',
"ClocoEmailSetup/view/Main.view.xml":'<mvc:View xmlns:mvc="sap.ui.core.mvc" xmlns:m="sap.m" xmlns:app="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\tcontrollerName="ClocoEmailSetup.controller.Main" xmlns:core="sap.ui.core" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:l="sap.ui.layout" height="100%" class="sapUiSizeCompact">\n\t<l:Splitter>\n\t\t<m:VBox height="100%" backgroundDesign="Solid">\n\t\t\t<m:VBox alignItems="Center" class="sapUiTinyMarginTopBottom">  \n\t\t\t\t<m:HBox width="90%" justifyContent="Center" alignItems="Center" class="tree_menu_modelo">\n\t\t\t\t\t<m:Label text="Modelo:" class="tree_menu_key_label"/>\n\t\t\t\t\t<m:Select id="idInputModelo" change="onNovoModelo" class="sapUiTinyMarginBegin inputSelect" items="{ path: \'Planos>/\' }">\n\t\t\t\t\t\t<core:Item key="{Planos>Instance}" text="{Planos>Profile}"/>\n\t\t\t\t\t</m:Select>\n\t\t\t\t\t<m:Select id="idInputPeriodo" visible="false" change="onNovoPeriodo" class="sapUiTinyMarginBegin inputSelect" items="{ path: \'Periodos>/\' }">\n\t\t\t\t\t\t<core:Item key="{Periodos>Instance}" text="{Periodos>Data}" />\n\t\t\t\t\t</m:Select>\n\t\t\t\t</m:HBox>\n\t\t\t\t<m:HBox width="90%" justifyContent="Center" alignItems="Center" class="tree_menu_options">\n\t\t\t\t\t<m:CheckBox id="idCheckboxModelo" text="Aplicar regra ao Modelo" selected="true" class="tree_menu_key_label1" enabled="false"/>\n\t\t\t\t\t<m:ToggleButton id="idExecMassa" text="Visão por Tarefas" press="onPress" class="sapUiSmallMarginBegin" enabled="false"/>\n\t\t\t\t</m:HBox>\n\t\t\t</m:VBox>\n\t\t\t<m:Tree id="Tree" items="{path : \'HierarquiaPastas>/\'}" visible="true" mode="MultiSelect" selectionChange="onTreeSelect">\n\t\t\t\t<m:StandardTreeItem selected="{HierarquiaPastas>selected}" type="{= ${HierarquiaPastas>Item} === \'X\' ? ${HierarquiaPastas>contemRegra} === \'X\' ? \'Navigation\' : \'Active\' : \'Inactive\' }" press="onPressTree" title="{HierarquiaPastas>Description}" app:key="{HierarquiaPastas>NodeID}" >\n\t\t\t\t\t<m:customData>\n\t\t\t\t\t</m:customData>\n\t\t\t\t</m:StandardTreeItem>\n\t\t\t\t<m:layoutData><l:SplitterLayoutData size="30%"/></m:layoutData>\n\t\t\t</m:Tree>\n\t\t</m:VBox>\n\t\t\n\t\t<m:NavContainer\n\t\t\tid="navCon"\twidth="100%" height="100%"\tclass="navContainerControl">\n\t\t\t<m:Page id="p1" showHeader="false">\n\t\t\t\t<m:VBox width="100%" height="100%" justifyContent="Center" alignItems="Center" >\n\t\t\t\t\t<m:HBox width="75%" height="100%" justifyContent="Center" alignItems="Center" wrap="Wrap">\n\t\t\t\t\t\t<m:Label text="Selecionar uma tarefa de um Modelo ou Plano de Tarefas"  class="labelIdle" wrapping="true"/>\n\t\t\t\t\t</m:HBox>\n\t\t\t\t</m:VBox>\t\n\t\t\t</m:Page>\n\t\t\t<m:Page id="p2" showHeader="false">\n\t\t\t\t<m:VBox height="100%" backgroundDesign="Solid">\n\t\t\t\t\t<m:VBox height="55%" backgroundDesign="Solid">\n\t\t\t\t\t\t<m:IconTabBar \n\t\t\t\t\t\t\tid="idIconTabBar"\n\t\t\t\t\t\t\texpanded="{device>/isNoPhone}"\n\t\t\t\t\t\t\texpandable="false">\n\t\t\t\t\t\t\t<m:items>\n\t\t\t\t\t\t\t\t<m:IconTabFilter text="Lembrete" id="lembrete">\n\t\t\t\t\t\t\t\t\t<m:VBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Switch id="idSwitchLembrete" state="false" customTextOn=" " customTextOff=" " change="onChangeSwitchLb" tooltip="Objetivo: enviar e-mail de lembrete antes do início planejado da tarefa"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Objetivo: enviar e-mail de lembrete antes do início planejado da tarefa"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Agendamento em Horas" labelFor="lembreteAgendHoras" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:TimePicker\tid="lembreteAgendHoras" value="00:15"\tvalueFormat="HH:mm"\tdisplayFormat="HH:mm"\tplaceholder="Entrar Hora/Minuto" width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Neste campo pode ser definido quanto tempo antes do horário previsto para início da tarefa o responsável pela execução receberá o e-mail de lembrete" />\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Endereço do Email" labelFor="lembreteEmails" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="lembreteEmails"\ttype="Email" width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Por padrão, o programa sempre enviará e-mail para o responsável pela execução (conforme login SAP atribuído na criação da tarefa). Aqui você pode entrar com endereço de e-mail adicional ao do executor"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Assunto" labelFor="lembreteAssunto" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="lembreteAssunto"\t  width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no campo de “Assunto”. O texto padrão é composto pela palavra “Fechamento” + a descrição da tarefa a ser executada. Este campo pode ser utilizado para substituir o texto padrão do assunto"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Texto" labelFor="lembreteTexto1" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="lembreteTexto1"\twidth="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no corpo do e-mail, indicando a tarefa e a ação a serem adotadas. Além do texto padrão enviado pelo programa no corpo do e-mail, você dispõe de mais 2 campos de texto (de 255 caracteres cada) para acrescentar informações que considere necessário"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Texto" labelFor="lembreteTexto2" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="lembreteTexto2"\twidth="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no corpo do e-mail, indicando a tarefa e a ação a serem adotadas. Além do texto padrão enviado pelo programa no corpo do e-mail, você dispõe de mais 2 campos de texto (de 255 caracteres cada) para acrescentar informações que considere necessário"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t</m:VBox>\n\t\t\t\t\t\t\t\t</m:IconTabFilter>\n\t\t\t\t\t\t\t\t<m:IconTabFilter text="Atividade Não Iniciada" id="n_inic">\n\t\t\t\t\t\t\t\t\t<m:VBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Switch id="idSwitchNI" state="false" customTextOn=" " customTextOff=" " change="onChangeSwitchNI" tooltip="Objetivo: enviar alerta para o usuário responsável pela tarefa quando o início planejado da execução estiver em atraso"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Objetivo: enviar alerta para o usuário responsável pela tarefa quando o início planejado da execução estiver em atraso"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Quantidade máxima E-mails" labelFor="qtdeNIEmails" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="qtdeNIEmails" width="200px" enabled="false" maxLength="1" />\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Este campo poderá ser utilizado para configurar a quantidade máxima de e-mails de alerta que os usuários indicados irão receber enquanto a execução da atividade em atraso não for iniciada" />\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Intervalo de Envio" labelFor="AtvdNIintervalo" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:TimePicker\tid="AtvdNIintervalo" value="00:15"\tvalueFormat="HH:mm"\tdisplayFormat="HH:mm"\tplaceholder="Entrar Hora/Minuto" width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Complemento da configuração anterior (quantidade máxima de e-mails). Este campo é utilizado para definir qual o intervalo de envio para cada e-mail"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Endereço do Email" labelFor="atvdNIEmails" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdNIEmails"\ttype="Email" width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Por padrão, o programa sempre enviará e-mail para o responsável pela execução (conforme login SAP atribuído na criação da tarefa). Aqui você pode entrar com endereço de e-mail adicional ao do executor"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Assunto" labelFor="atvdNIAssunto" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdNIAssunto"\t  width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no campo de “Assunto”. O texto padrão é composto pela palavra “Fechamento” + a descrição da tarefa a ser executada. Este campo pode ser utilizado para substituir o texto padrão do assunto"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Texto" labelFor="atvdNITexto1" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdNITexto1"\twidth="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no corpo do e-mail, indicando a tarefa e a ação a serem adotadas. Além do texto padrão enviado pelo programa no corpo do e-mail, você dispõe de mais 2 campos de texto (de 255 caracteres cada) para acrescentar informações que considere necessário"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Texto" labelFor="atvdNITexto2" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdNITexto2"\twidth="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no corpo do e-mail, indicando a tarefa e a ação a serem adotadas. Além do texto padrão enviado pelo programa no corpo do e-mail, você dispõe de mais 2 campos de texto (de 255 caracteres cada) para acrescentar informações que considere necessário"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t</m:VBox>\n\t\t\t\t\t\t\t\t</m:IconTabFilter>\n\t\t\t\t\t\t\t\t<m:IconTabFilter text="Atividade Não Encerrada" id="n_enc">\n\t\t\t\t\t\t\t\t\t<m:VBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Switch id="idSwitchNE" state="false" customTextOn=" " customTextOff=" " change="onChangeSwitchNE" />\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Objetivo: enviar alerta para o usuário responsável pela tarefa quando a conclusão da execução estiver em atraso em comparação ao prazo planejado."/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Quantidade máxima E-mails" labelFor="qtdeNEEmails" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="qtdeNEEmails" width="200px" enabled="false" maxLength="1" />\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Este campo poderá ser utilizado para configurar a quantidade máxima de e-mails de alerta que os usuários indicados irão receber enquanto a execução da atividade em atraso não for iniciada" />\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Intervalo de Envio" labelFor="AtvdNEintervalo" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:TimePicker\tid="AtvdNEintervalo" value="00:15"\tvalueFormat="HH:mm"\tdisplayFormat="HH:mm"\tplaceholder="Entrar Hora/Minuto" width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Complemento da configuração anterior (quantidade máxima de e-mails). Este campo é utilizado para definir qual o intervalo de envio para cada e-mail"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Endereço do Email" labelFor="atvdNEEmails" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdNEEmails"\ttype="Email" width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Por padrão, o programa sempre enviará e-mail para o responsável pela execução (conforme login SAP atribuído na criação da tarefa). Aqui você pode entrar com endereço de e-mail adicional ao do executor"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Assunto" labelFor="atvdNEAssunto" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdNEAssunto"\t  width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no campo de “Assunto”. O texto padrão é composto pela palavra “Fechamento” + a descrição da tarefa a ser executada. Este campo pode ser utilizado para substituir o texto padrão do assunto"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Texto" labelFor="atvdNETexto1" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdNETexto1"\twidth="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no corpo do e-mail, indicando a tarefa e a ação a serem adotadas. Além do texto padrão enviado pelo programa no corpo do e-mail, você dispõe de mais 2 campos de texto (de 255 caracteres cada) para acrescentar informações que considere necessário"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Texto" labelFor="atvdNETexto2" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdNETexto2"\twidth="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no corpo do e-mail, indicando a tarefa e a ação a serem adotadas. Além do texto padrão enviado pelo programa no corpo do e-mail, você dispõe de mais 2 campos de texto (de 255 caracteres cada) para acrescentar informações que considere necessário"/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t</m:VBox>\n\t\t\t\t\t\t\t\t</m:IconTabFilter>\n\t\t\t\t\t\t\t\t<m:IconTabFilter text="Atividade Disponível" id="disponivel">\n\t\t\t\t\t\t\t\t\t<m:VBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Switch id="idSwitchDI" state="false" customTextOn=" " customTextOff=" " change="onChangeSwitchDI"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Objetivo: enviar aviso para o usuário responsável pela execução de uma tarefa quando uma atividade precedente estiver concluída (válido para as tarefas configuradas com a relação de dependência)." />\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Endereço do Email" labelFor="atvdDIEmails" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdDIEmails"\ttype="Email" width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="Por padrão, o programa sempre enviará e-mail para o responsável pela execução (conforme login SAP atribuído na criação da tarefa). Aqui você pode entrar com endereço de e-mail adicional ao do executor."/>\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Assunto" labelFor="atvdDIAssunto" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdDIAssunto"\t  width="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no campo de “Assunto”. O texto padrão é composto pela palavra “Fechamento” + a descrição da tarefa a ser executada. Este campo pode ser utilizado para substituir o texto padrão do assunto." />\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Texto" labelFor="atvdDITexto1" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdDITexto1"\twidth="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no corpo do e-mail, indicando a tarefa e a ação a serem adotadas. Além do texto padrão enviado pelo programa no corpo do e-mail, você dispõe de mais 2 campos de texto (de 255 caracteres cada) para acrescentar informações que considere necessário" />\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t\t<m:HBox alignItems="Center">\n\t\t\t\t\t\t\t\t\t\t\t<m:Label text="Texto" labelFor="atvdDITexto2" width="180px"/>\n\t\t\t\t\t\t\t\t\t\t\t<m:Input id="atvdDITexto2"\twidth="200px" enabled="false"/>\n\t\t\t\t\t\t\t\t\t\t\t<core:Icon\tsrc="sap-icon://sys-help" class="sapUiTinyMarginBegin" tooltip="O programa envia e-mail utilizando um texto padrão no corpo do e-mail, indicando a tarefa e a ação a serem adotadas. Além do texto padrão enviado pelo programa no corpo do e-mail, você dispõe de mais 2 campos de texto (de 255 caracteres cada) para acrescentar informações que considere necessário" />\n\t\t\t\t\t\t\t\t\t\t</m:HBox>\n\t\t\t\t\t\t\t\t\t</m:VBox>\n\t\t\t\t\t\t\t\t</m:IconTabFilter>\n\t\t\t\t\t\t\t</m:items>\n\t\t\t\t\t\t</m:IconTabBar>\n\t\t\t\t\t</m:VBox>\n\t\t\t\t\t<m:HBox width="100%" justifyContent="Center" alignItems="Start" class="sapUiSmallMarginTop" >\n\t\t\t\t\t\t<m:Button text="Gravar regra"  type="Accept" class="button_regra" press="onPressGravarRegra"/>\n\t\t\t\t\t\t<m:Button text="Excluir regra" type="Reject" class="button_regra sapUiSmallMarginBegin" press="onPressExcluirRegra"/>\n\t\t\t\t\t</m:HBox>\n\t\t\t\t</m:VBox>\n\t\t\t</m:Page>\n\t\t\n\t\t</m:NavContainer>\n\t\t\n\t\t\n\t</l:Splitter>\n\t<m:HBox id="tooltipCont" class="tooltip_container">\n\t\t<m:HBox width="150px" >\n\t\t\t<m:Label text="teste teste teste" wrapping="true" />\n\t\t</m:HBox>\n\t</m:HBox>\n\t\n</mvc:View>'}});